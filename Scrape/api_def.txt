paddle.abs(x,name=None)
paddle.acos(x,name=None)
paddle.acosh(x,name=None)
paddle.add(x,y,name=None)
paddle.add_n(inputs,name=None)
paddle.addmm(input,x,y,beta=1.0,alpha=1.0,name=None)
paddle.all(x,axis=None,keepdim=False,name=None)
paddle.allclose(x,y,rtol=1e-05,atol=1e-08,equal_nan=False,name=None)
paddle.amax(x,axis=None,keepdim=False,name=None)
paddle.amin(x,axis=None,keepdim=False,name=None)
paddle.angle(x,name=None)
paddle.any(x,axis=None,keepdim=False,name=None)
paddle.arange(start=0,end=None,step=1,dtype=None,name=None)
paddle.argmax(x,axis=None,keepdim=False,dtype='int64',name=None)
paddle.argmin(x,axis=None,keepdim=False,dtype='int64',name=None)
paddle.argsort(x,axis=-1,descending=False,name=None)
paddle.as_complex(x,name=None)
paddle.as_real(x,name=None)
paddle.asin(x,name=None)
paddle.asinh(x,name=None)
paddle.assign(x,output=None)
paddle.atan(x,name=None)
paddle.atan2(x,y,name=None)
paddle.atanh(x,name=None)
paddle.batch(reader,batch_size,drop_last=False)
paddle.bernoulli(x,name=None)
paddle.bincount(x,weights=None,minlength=0,name=None)
paddle.bitwise_and(x,y,out=None,name=None)
paddle.bitwise_not(x,out=None,name=None)
paddle.bitwise_or(x,y,out=None,name=None)
paddle.bitwise_xor(x,y,out=None,name=None)
paddle.bmm(x,y,name=None)
paddle.broadcast_shape(x_shape,y_shape)
paddle.broadcast_tensors(input,name=None)
paddle.broadcast_to(x,shape,name=None)
paddle.bucketize(x,sorted_sequence,out_int32=False,right=False,name=None)
paddle.cast(x,dtype)
paddle.ceil(x,name=None)
paddle.check_shape(shape,op_name,expected_shape_type=(<class'list'>,<class'tuple'>,<class'paddle.fluid.framework.Variable'>),expected_element_type=(<class'int'>,<class'paddle.fluid.framework.Variable'>),expected_tensor_dtype=('int32','int64'))
paddle.chunk(x,chunks,axis=0,name=None)
paddle.clip(x,min=None,max=None,name=None)
paddle.clone(x,name=None)
paddle.complex(real,imag,name=None)
paddle.concat(x,axis=0,name=None)
paddle.conj(x,name=None)
paddle.cos(x,name=None)
paddle.cosh(x,name=None)
paddle.count_nonzero(x,axis=None,keepdim=False,name=None)
paddle.CPUPlace()
paddle.create_parameter(shape,dtype,name=None,attr=None,is_bias=False,default_initializer=None)
paddle.crop(x,shape=None,offsets=None,name=None)
paddle.cross(x,y,axis=9,name=None)
paddle.CUDAPinnedPlace()
paddle.CUDAPlace(id)
paddle.cumprod(x,dim=None,dtype=None,name=None)
paddle.cumsum(x,axis=None,dtype=None,name=None)
paddle.DataParallel(layers, strategy=None, comm_buffer_size=25, last_comm_buffer_size=1, find_unused_parameters=False, group=None)
paddle.deg2rad(x,name=None)
paddle.diag(x,offset=0,padding_value=0,name=None)
paddle.diagflat(x,offset=0,name=None)
paddle.diagonal(x,offset=0,axis1=0,axis2=1,name=None)
paddle.diff(x,n=1,axis=-1,prepend=None,append=None,name=None)
paddle.digamma(x,name=None)
paddle.disable_signal_handler()
paddle.disable_static(place=None)
paddle.dist(x,y,p=2,name=None)
paddle.divide(x,y,name=None)
paddle.dot(x,y,name=None)
paddle.dtype
paddle.einsum(equation,*operands)
paddle.empty(shape,dtype=None,name=None)
paddle.empty_like(x,dtype=None,name=None)
paddle.enable_static()
paddle.equal(x,y,name=None)
paddle.equal_all(x,y,name=None)
paddle.erf(x,name=None)
paddle.erfinv(x,name=None)
paddle.exp(x,name=None)
paddle.expand(x,shape,name=None)
paddle.expand_as(x,y,name=None)
paddle.expm1(x,name=None)
paddle.eye(num_rows,num_columns=None,dtype=None,name=None)
paddle.flatten(x,start_axis=0,stop_axis=-1,name=None)
paddle.flip(x,axis,name=None)
paddle.floor(x,name=None)
paddle.floor_divide(x,y,name=None)
paddle.floor_mod(x,y,name=None)
paddle.flops(net,input_size,custom_ops=None,print_detail=False)
paddle.fmax(x,y,name=None)
paddle.fmin(x,y,name=None)
paddle.frac(x,name=None)
paddle.full(shape,fill_value,dtype=None,name=None)
paddle.full_like(x,fill_value,dtype=None,name=None)
paddle.gather(x,index,axis=None,name=None)
paddle.gather_nd(x,index,name=None)
paddle.gcd(x,y,name=None)
paddle.get_cuda_rng_state()
paddle.get_default_dtype()
paddle.get_flags(flags)
paddle.grad(outputs,inputs,grad_outputs=None,retain_graph=None,create_graph=False,only_inputs=True,allow_unused=False,no_grad_vars=None)
paddle.greater_equal(x,y,name=None)
paddle.greater_than(x,y,name=None)
paddle.heaviside(x,y,name=None)
paddle.histogram(input,bins=100,min=0,max=0,name=None)
paddle.iinfo(dtype)
paddle.imag(x,name=None)
paddle.in_dynamic
paddle.increment(x,value=1.0,name=None)
paddle.index_add(x,index,axis,value,name=None)
paddle.index_add_(x,index,axis,value,name=None)
paddle.index_sample(x,index)
paddle.index_select(x,index,axis=0,name=None)
paddle.inner(x,y,name=None)
paddle.is_complex(x)
paddle.is_empty(x,name=None)
paddle.is_floating_point(x)
paddle.is_grad_enabled()
paddle.is_integer(x)
paddle.is_tensor(x)
paddle.isclose(x,y,rtol=1e-05,atol=1e-08,equal_nan=False,name=None)
paddle.isfinite(x,name=None)
paddle.isinf(x,name=None)
paddle.isnan(x,name=None)
paddle.kron(x,y,name=None)
paddle.kthvalue(x,k,axis=None,keepdim=False,name=None)
paddle.LazyGuard()
paddle.lcm(x,y,name=None)
paddle.lerp(x,y,weight,name=None)
paddle.less_equal(x,y,name=None)
paddle.less_than(x,y,name=None)
paddle.lgamma(x,name=None)
paddle.linspace(start,stop,num,dtype=None,name=None)
paddle.load(path,**configs)
paddle.log(x,name=None)
paddle.log10(x,name=None)
paddle.log1p(x,name=None)
paddle.log2(x,name=None)
paddle.logcumsumexp(x,axis=None,dtype=None,name=None)
paddle.logical_and(x,y,out=None,name=None)
paddle.logical_not(x,out=None,name=None)
paddle.logical_or(x,y,out=None,name=None)
paddle.logical_xor(x,y,out=None,name=None)
paddle.logit(x,eps=None,name=None)
paddle.logspace(start,stop,num,base=10.0,dtype=None,name=None)
paddle.logsumexp(x,axis=None,keepdim=False,name=None)
paddle.masked_select(x,mask,name=None)
paddle.matmul(x,y,transpose_x=False,transpose_y=False,name=None)
paddle.max(x,axis=None,keepdim=False,name=None)
paddle.maximum(x,y,name=None)
paddle.mean(x,axis=None,keepdim=False,name=None)
paddle.median(x,axis=None,keepdim=False,name=None)
paddle.meshgrid(*args,**kwargs)
paddle.min(x,axis=None,keepdim=False,name=None)
paddle.minimum(x,y,name=None)
paddle.mm(input,mat2,name=None)
paddle.mode(x,axis=-1,keepdim=False,name=None)
paddle.Model(network, inputs=None, labels=None)
paddle.moveaxis(x,source,destination,name=None)
paddle.multinomial(x,num_samples=1,replacement=False,name=None)
paddle.multiplex(inputs,index,name=None)
paddle.multiply(x,y,name=None)
paddle.mv(x,vec,name=None)
paddle.nanmean(x,axis=None,keepdim=False,name=None)
paddle.nanmedian(x,axis=None,keepdim=True,name=None)
paddle.nanquantile(x,q,axis=None,keepdim=False)
paddle.nansum(x,axis=None,dtype=None,keepdim=False,name=None)
paddle.neg(x,name=None)
paddle.no_grad
paddle.nonzero(x,as_tuple=False)
paddle.normal(mean=0.0,std=1.0,shape=None,name=None)
paddle.not_equal(x,y,name=None)
paddle.NPUPlace(id)
paddle.numel(x,name=None)
paddle.ones(shape,dtype=None,name=None)
paddle.ones_like(x,dtype=None,name=None)
paddle.outer(x,y,name=None)
paddle.ParamAttr(name=None,initializer=None,learning_rate=1.0,regularizer=None,trainable=True,do_model_average=True,need_clip=True)
paddle.poisson(x,name=None)
paddle.pow(x,y,name=None)
paddle.prod(x,axis=None,keepdim=False,dtype=None,name=None)
paddle.put_along_axis(arr,indices,values,axis,reduce='assign')
paddle.quantile(x,q,axis=None,keepdim=False)
paddle.rad2deg(x,name=None)
paddle.rand(shape,dtype=None,name=None)
paddle.randint(low=0,high=None,shape=[1],dtype=None,name=None)
paddle.randint_like(x,low=0,high=None,dtype=None,name=None)
paddle.randn(shape,dtype=None,name=None)
paddle.randperm(n,dtype='int64',name=None)
paddle.rank(input)
paddle.real(x,name=None)
paddle.reciprocal(x,name=None)
paddle.renorm(x,p,axis,max_norm)
paddle.repeat_interleave(x,repeats,axis=None,name=None)
paddle.reshape(x,shape,name=None)
paddle.reshape_(x,shape,name=None)
paddle.roll(x,shifts,axis=None,name=None)
paddle.rot90(x,k=1,axes=[0,1],name=None)
paddle.round(x,name=None)
paddle.rsqrt(x,name=None)
paddle.save(obj,path,protocol=4,**configs)
paddle.scale(x,scale=1.0,bias=0.0,bias_after_scale=True,act=None,name=None)
paddle.scatter(x,index,updates,overwrite=True,name=None)
paddle.scatter_(x,index,updates,overwrite=True,name=None)
paddle.scatter_nd(index,updates,shape,name=None)
paddle.scatter_nd_add(x,index,updates,name=None)
paddle.searchsorted(sorted_sequence,values,out_int32=False,right=False,name=None)
paddle.seed(seed)
paddle.set_cuda_rng_state(state_list)
paddle.set_default_dtype(d)
paddle.set_flags(flags)
paddle.set_grad_enabled(mode)
paddle.set_printoptions(precision=None,threshold=None,edgeitems=None,sci_mode=None,linewidth=None)
paddle.sgn(x,name=None)
paddle.shape(input)
paddle.shard_index(input,index_num,nshards,shard_id,ignore_value=-1)
paddle.sign(x,name=None)
paddle.sin(x,name=None)
paddle.sinh(x,name=None)
paddle.slice(input,axes,starts,ends)
paddle.sort(x,axis=-1,descending=False,name=None)
paddle.split(x,num_or_sections,axis=0,name=None)
paddle.sqrt(x,name=None)
paddle.square(x,name=None)
paddle.squeeze(x,axis=None,name=None)
paddle.squeeze_(x,axis=None,name=None)
paddle.stack(x,axis=0,name=None)
paddle.standard_normal(shape,dtype=None,name=None)
paddle.stanh(x,scale_a=0.67,scale_b=1.7159,name=None)
paddle.std(x,axis=None,unbiased=True,keepdim=False,name=None)
paddle.strided_slice(x,axes,starts,ends,strides,name=None)
paddle.subtract(x,y,name=None)
paddle.sum(x,axis=None,dtype=None,keepdim=False,name=None)
paddle.summary(net,input_size=None,dtypes=None,input=None)
paddle.t(input,name=None)
paddle.take(x,index,mode='raise',name=None)
paddle.take_along_axis(arr,indices,axis)
paddle.tan(x,name=None)
paddle.tanh(x,name=None)
paddle.tanh_(x,name=None)
paddle.Tensor
paddle.tensordot(x,y,axes=2,name=None)
paddle.tile(x,repeat_times,name=None)
paddle.to_tensor(data,dtype=None,place=None,stop_gradient=True)
paddle.tolist(x)
paddle.topk(x,k,axis=None,largest=True,sorted=True,name=None)
paddle.trace(x,offset=0,axis1=0,axis2=1,name=None)
paddle.transpose(x,perm,name=None)
paddle.tril(x,diagonal=0,name=None)
paddle.tril_indices(row,col,offset=0,dtype='int64')
paddle.triu(x,diagonal=0,name=None)
paddle.triu_indices(row,col=None,offset=0,dtype='int64')
paddle.trunc(input,name=None)
paddle.unbind(input,axis=0)
paddle.uniform(shape,dtype=None,min=-1.0,max=1.0,seed=0,name=None)
paddle.unique(x,return_index=False,return_inverse=False,return_counts=False,axis=None,dtype='int64',name=None)
paddle.unique_consecutive(x,return_inverse=False,return_counts=False,axis=None,dtype='int64',name=None)
paddle.unsqueeze(x,axis,name=None)
paddle.unsqueeze_(x,axis,name=None)
paddle.unstack(x,axis=0,num=None)
paddle.var(x,axis=None,unbiased=True,keepdim=False,name=None)
paddle.where(condition,x=None,y=None,name=None)
paddle.zeros(shape,dtype=None,name=None)
paddle.zeros_like(x,dtype=None,name=None)
paddle.amp.auto_cast(enable=True,custom_white_list=None,custom_black_list=None,level='O1',dtype='float16')
paddle.amp.decorate(models,optimizers=None,level='O1',master_weight=None,save_dtype=None)
paddle.amp.GradScaler(enable=True,init_loss_scaling=32768.0,incr_ratio=2.0,decr_ratio=0.5,incr_every_n_steps=1000,decr_every_n_nan_or_inf=2,use_dynamic_loss_scaling=True)
paddle.audio.backends.get_current_backend()
paddle.audio.backends.list_available_backends()
paddle.audio.backends.set_backend(backend_name:str)
paddle.audio.datasets.ESC50(mode: str = 'train', split: int = 1, feat_type: str = 'raw', archive=None, **kwargs)
paddle.audio.datasets.TESS(mode: str = 'train', n_folds: int = 5, split: int = 1, feat_type: str = 'raw', archive=None, **kwargs)
paddle.audio.features.LogMelSpectrogram(sr: int = 22050, n_fft: int = 512, hop_length: Optional[int] = None, win_length: Optional[int] = None, window: str = 'hann', power: float = 2.0, center: bool = True, pad_mode: str = 'reflect', n_mels: int = 64, f_min: float = 50.0, f_max: Optional[float] = None, htk: bool = False, norm: Union[str, float] = 'slaney', ref_value: float = 1.0, amin: float = 1e-10, top_db: Optional[float] = None, dtype: str = 'float32')
paddle.audio.features.MelSpectrogram(sr: int = 22050, n_fft: int = 2048, hop_length: Optional[int] = 512, win_length: Optional[int] = None, window: str = 'hann', power: float = 2.0, center: bool = True, pad_mode: str = 'reflect', n_mels: int = 64, f_min: float = 50.0, f_max: Optional[float] = None, htk: bool = False, norm: Union[str, float] = 'slaney', dtype: str = 'float32')
paddle.audio.features.MFCC(sr: int = 22050, n_mfcc: int = 40, n_fft: int = 512, hop_length: Optional[int] = None, win_length: Optional[int] = None, window: str = 'hann', power: float = 2.0, center: bool = True, pad_mode: str = 'reflect', n_mels: int = 64, f_min: float = 50.0, f_max: Optional[float] = None, htk: bool = False, norm: Union[str, float] = 'slaney', ref_value: float = 1.0, amin: float = 1e-10, top_db: Optional[float] = None, dtype: str = 'float32')
paddle.audio.features.Spectrogram(n_fft: int = 512, hop_length: Optional[int] = 512, win_length: Optional[int] = None, window: str = 'hann', power: float = 1.0, center: bool = True, pad_mode: str = 'reflect', dtype: str = 'float32')
paddle.audio.functional.compute_fbank_matrix(sr: int, n_fft: int, n_mels: int = 64, f_min: float = 0.0, f_max: Optional[float] = None, htk: bool = False, norm: Union[str, float] = 'slaney', dtype: str = 'float32')
paddle.audio.functional.create_dct(n_mfcc: int, n_mels: int, norm: Optional[str] = 'ortho', dtype: str = 'float32')
paddle.audio.functional.fft_frequencies(sr: int, n_fft: int, dtype: str = 'float32')
paddle.audio.functional.get_window(window: Union[str, Tuple[str, float]], win_length: int, fftbins: bool = True, dtype: str = 'float64')
paddle.audio.functional.hz_to_mel(freq: Union[paddle.Tensor, float], htk: bool = False)
paddle.audio.functional.mel_frequencies(n_mels: int = 64, f_min: float = 0.0, f_max: float = 11025.0, htk: bool = False, dtype: str = 'float32')
paddle.audio.functional.mel_to_hz(mel: Union[float, paddle.Tensor], htk: bool = False)
paddle.audio.functional.power_to_db(spect: paddle.Tensor, ref_value: float = 1.0, amin: float = 1e-10, top_db: Optional[float] = 80.0)
paddle.audio.info(filepath: str)
paddle.audio.load(filepath: Union[str, pathlib.Path], frame_offset: int = 0, num_frames: int = - 1, normalize: bool = True, channels_first: bool = True)
paddle.audio.save(filepath:str,src:paddle.Tensor,sample_rate:int,channels_first:bool=True,encoding:Optional[str]=None,bits_per_sample:Optional[int]=16)
paddle.autograd.backward(tensors,grad_tensors=None,retain_graph=False)
paddle.autograd.PyLayer()
paddle.autograd.PyLayerContext()
paddle.callbacks.Callback()
paddle.callbacks.EarlyStopping(monitor='loss',mode='auto',patience=0,verbose=1,min_delta=0,baseline=None,save_best_model=True)
paddle.callbacks.LRScheduler(by_step=True,by_epoch=False)
paddle.callbacks.ModelCheckpoint(save_freq=1,save_dir=None)
paddle.callbacks.ProgBarLogger(log_freq=1,verbose=2)
paddle.callbacks.ReduceLROnPlateau(monitor='loss',factor=0.1,patience=10,verbose=1,mode='auto',min_delta=0.0001,cooldown=0,min_lr=0)
paddle.callbacks.VisualDL(log_dir)
paddle.device.cuda.current_stream(device=None)
paddle.device.cuda.device_count()
paddle.device.cuda.empty_cache()
paddle.device.cuda.Event()
paddle.device.cuda.get_device_capability(device=None)
paddle.device.cuda.get_device_name(device=None)
paddle.device.cuda.get_device_properties(device=None)
paddle.device.cuda.max_memory_allocated(device=None)
paddle.device.cuda.max_memory_reserved(device=None)
paddle.device.cuda.memory_allocated(device=None)
paddle.device.cuda.memory_reserved(device=None)
paddle.device.cuda.Stream
paddle.device.cuda.stream_guard(stream)
paddle.device.cuda.synchronize(device=None)
paddle.device.get_all_custom_device_type()
paddle.device.get_all_device_type()
paddle.device.get_available_custom_device()
paddle.device.get_available_device()
paddle.device.get_cudnn_version()
paddle.device.get_device()
paddle.device.IPUPlace()
paddle.device.is_compiled_with_cinn()
paddle.device.is_compiled_with_cuda()
paddle.device.is_compiled_with_ipu()
paddle.device.is_compiled_with_mlu()
paddle.device.is_compiled_with_npu()
paddle.device.is_compiled_with_rocm()
paddle.device.is_compiled_with_xpu()
paddle.device.MLUPlace(dev_id)
paddle.device.set_device(device)
paddle.device.XPUPlace(dev_id)
paddle.distributed.all_gather(tensor_list,tensor,group=None,sync_op=True)
paddle.distributed.all_gather_object(object_list,obj,group=None)
paddle.distributed.all_reduce(tensor,op=0,group=None,sync_op=True)
paddle.distributed.alltoall(in_tensor_list,out_tensor_list,group=None,sync_op=True)
paddle.distributed.alltoall_single(in_tensor,out_tensor,in_split_sizes=None,out_split_sizes=None,group=None,sync_op=True)
paddle.distributed.barrier(group=None)
paddle.distributed.broadcast(tensor,src,group=None,sync_op=True)
paddle.distributed.communication.stream.all_gather(tensor_or_tensor_list,tensor,group=None,sync_op=True,use_calc_stream=False)
paddle.distributed.communication.stream.all_reduce(tensor,op=0,group=None,sync_op=True,use_calc_stream=False)
paddle.distributed.communication.stream.alltoall(out_tensor_or_tensor_list,in_tensor_or_tensor_list,group=None,sync_op=True,use_calc_stream=False)
paddle.distributed.communication.stream.alltoall_single(out_tensor,in_tensor,out_split_sizes=None,in_split_sizes=None,group=None,sync_op=True,use_calc_stream=False)
paddle.distributed.communication.stream.broadcast(tensor,src=0,group=None,sync_op=True,use_calc_stream=False)
paddle.distributed.communication.stream.recv(tensor,src=0,group=None,sync_op=True,use_calc_stream=False)
paddle.distributed.communication.stream.reduce(tensor,dst=0,op=0,group=None,sync_op=True,use_calc_stream=False)
paddle.distributed.communication.stream.reduce_scatter(tensor,tensor_or_tensor_list,op=0,group=None,sync_op=True,use_calc_stream=False)
paddle.distributed.communication.stream.scatter(tensor,tensor_or_tensor_list=None,src=0,group=None,sync_op=True,use_calc_stream=False)
paddle.distributed.communication.stream.send(tensor,dst=0,group=None,sync_op=True,use_calc_stream=False)
paddle.distributed.CountFilterEntry(count_filter)
paddle.distributed.destroy_process_group(group=None)
paddle.distributed.fleet.CommunicateTopology(hybrid_group_names=['data','pipe','sharding','model'],dims=[1,1,1,1])
paddle.distributed.fleet.DistributedStrategy()
paddle.distributed.fleet.Fleet()
paddle.distributed.fleet.HybridCommunicateGroup(topology)
paddle.distributed.fleet.MultiSlotDataGenerator()
paddle.distributed.fleet.MultiSlotStringDataGenerator()
paddle.distributed.fleet.PaddleCloudRoleMaker(is_collective=False,**kwargs)
paddle.distributed.fleet.Role()
paddle.distributed.fleet.UserDefinedRoleMaker(is_collective=False,init_gloo=False,**kwargs)
paddle.distributed.fleet.UtilBase()
paddle.distributed.fleet.utils.DistributedInfer(main_program=None,startup_program=None)
paddle.distributed.fleet.utils.HDFSClient(hadoop_home,configs,time_out=300000,sleep_inter=1000)
paddle.distributed.fleet.utils.LocalFS()
paddle.distributed.fleet.utils.recompute(function,*args,**kwargs)
paddle.distributed.get_group(id=0)
paddle.distributed.get_rank(group=None)
paddle.distributed.get_world_size(group=None)
paddle.distributed.gloo_barrier()
paddle.distributed.gloo_init_parallel_env(rank_id,rank_num,server_endpoint)
paddle.distributed.gloo_release()
paddle.distributed.init_parallel_env()
paddle.distributed.InMemoryDataset()
paddle.distributed.irecv(tensor,src=None,group=None)
paddle.distributed.is_initialized()
paddle.distributed.isend(tensor,dst,group=None)
paddle.distributed.launch()
paddle.distributed.new_group(ranks=None,backend=None,timeout=datetime.timedelta(seconds=1800))
paddle.distributed.ParallelEnv()
paddle.distributed.ParallelMode
paddle.distributed.passes.new_pass(name,pass_attrs={})
paddle.distributed.passes.PassContext()
paddle.distributed.passes.PassManager(passes,context=None,auto_solve_conflict=True)
paddle.distributed.ProbabilityEntry(probability)
paddle.distributed.ps.the_one_ps.BarrierTable(context,idx)
paddle.distributed.ps.the_one_ps.DenseTable(context,send_ctx)
paddle.distributed.ps.the_one_ps.GeoSparseTable(context,send_ctx)
paddle.distributed.ps.the_one_ps.SparseTable(context,send_ctx)
paddle.distributed.ps.the_one_ps.Table()
paddle.distributed.ps.the_one_ps.TensorTable(idx,tensor_dict,role_maker)
paddle.distributed.ps.utils.ps_factory.CpuAsyncPsProgramBuilder(pass_ctx)
paddle.distributed.ps.utils.ps_factory.CpuSyncPsProgramBuilder(pass_ctx)
paddle.distributed.ps.utils.ps_factory.FlPsProgramBuilder(pass_ctx)
paddle.distributed.ps.utils.ps_factory.GeoPsProgramBuilder(pass_ctx)
paddle.distributed.ps.utils.ps_factory.GpuPsProgramBuilder(pass_ctx)
paddle.distributed.ps.utils.ps_factory.HeterAsyncPsProgramBuilder(pass_ctx)
paddle.distributed.ps.utils.ps_factory.NuPsProgramBuilder(pass_ctx)
paddle.distributed.ps.utils.ps_factory.PsProgramBuilder(pass_ctx)
paddle.distributed.QueueDataset()
paddle.distributed.recv(tensor,src=0,group=None,sync_op=True)
paddle.distributed.reduce(tensor,dst,op=0,group=None,sync_op=True)
paddle.distributed.reduce_scatter(tensor,tensor_list,op=0,group=None,sync_op=True)
paddle.distributed.ReduceOp()
paddle.distributed.scatter(tensor,tensor_list=None,src=0,group=None,sync_op=True)
paddle.distributed.send(tensor,dst=0,group=None,sync_op=True)
paddle.distributed.sharding.group_sharded_parallel(model,optimizer,level,scaler=None,group=None,offload=False,sync_buffers=False,buffer_max_size=8388608,segment_size=1048576,sync_comm=False)
paddle.distributed.sharding.save_group_sharded_model(model,output,optimizer=None)
paddle.distributed.ShowClickEntry(show_name,click_name)
paddle.distributed.spawn(func,args=(),nprocs=-1,join=True,daemon=False,**options)paddle.distributed.split(x,size,operation,axis=0,num_partitions=1,gather_out=True,weight_attr=None,bias_attr=None,name=None)
paddle.distributed.split(x, size, operation, axis=0, num_partitions=1, gather_out=True, weight_attr=None, bias_attr=None, name=None)
paddle.distributed.wait(tensor,group=None,use_calc_stream=True)
paddle.distribution.AbsTransform()
paddle.distribution.AffineTransform(loc,scale)
paddle.distribution.Beta(alpha,beta)
paddle.distribution.Categorical(logits,name=None)
paddle.distribution.ChainTransform(transforms)
paddle.distribution.Dirichlet(concentration)
paddle.distribution.Distribution(batch_shape=(),event_shape=())
paddle.distribution.ExponentialFamily(batch_shape=(),event_shape=())
paddle.distribution.ExpTransform()
paddle.distribution.Independent(base,reinterpreted_batch_rank)
paddle.distribution.IndependentTransform(base,reinterpreted_batch_rank)
paddle.distribution.kl_divergence(p,q)
paddle.distribution.Multinomial(total_count,probs)
paddle.distribution.Normal(loc,scale,name=None)
paddle.distribution.PowerTransform(power)
paddle.distribution.register_kl(cls_p,cls_q)
paddle.distribution.ReshapeTransform(in_event_shape,out_event_shape)
paddle.distribution.SigmoidTransform()
paddle.distribution.SoftmaxTransform()
paddle.distribution.StackTransform(transforms,axis=0)
paddle.distribution.StickBreakingTransform()
paddle.distribution.TanhTransform()
paddle.distribution.Transform()
paddle.distribution.TransformedDistribution(base,transforms)
paddle.distribution.Uniform(low,high,name=None)
paddle.fft.fft(x,n=None,axis=-1,norm='backward',name=None)
paddle.fft.fft2(x,s=None,axes=(-2,-1),norm='backward',name=None)
paddle.fft.fftfreq(n,d=1.0,dtype=None,name=None)
paddle.fft.fftn(x,s=None,axes=None,norm='backward',name=None)
paddle.fft.fftshift(x,axes=None,name=None)
paddle.fft.hfft(x,n=None,axis=-1,norm='backward',name=None)
paddle.fft.hfft2(x,s=None,axes=(-2,-1),norm='backward',name=None)
paddle.fft.hfftn(x,s=None,axes=None,norm='backward',name=None)
paddle.fft.ifft(x,n=None,axis=-1,norm='backward',name=None)
paddle.fft.ifft2(x,s=None,axes=(-2,-1),norm='backward',name=None)
paddle.fft.ifftn(x,s=None,axes=None,norm='backward',name=None)
paddle.fft.ifftshift(x,axes=None,name=None)
paddle.fft.ihfft(x,n=None,axis=-1,norm='backward',name=None)
paddle.fft.ihfft2(x,s=None,axes=(-2,-1),norm='backward',name=None)
paddle.fft.ihfftn(x,s=None,axes=None,norm='backward',name=None)
paddle.fft.irfft(x,n=None,axis=-1,norm='backward',name=None)
paddle.fft.irfft2(x,s=None,axes=(-2,-1),norm='backward',name=None)
paddle.fft.irfftn(x,s=None,axes=None,norm='backward',name=None)
paddle.fft.rfft(x,n=None,axis=-1,norm='backward',name=None)
paddle.fft.rfft2(x,s=None,axes=(-2,-1),norm='backward',name=None)
paddle.fft.rfftfreq(n,d=1.0,dtype=None,name=None)
paddle.fft.rfftn(x,s=None,axes=None,norm='backward',name=None)
paddle.fluid.average.WeightedAverage()
paddle.fluid.clip.ErrorClipByValue(max,min=None)
paddle.fluid.clip.set_gradient_clip(clip,param_list=None,program=None)
paddle.fluid.communicator.Communicator(mode,kwargs=None,envs=None)
paddle.fluid.communicator.FLCommunicator(ps_hosts,kwargs=None)
paddle.fluid.communicator.LargeScaleKV()
paddle.fluid.contrib.decoder.beam_search_decoder.BeamSearchDecoder(state_cell,init_ids,init_scores,target_dict_dim,word_dim,input_var_dict={},topk_size=50,sparse_emb=True,max_len=100,beam_size=1,end_id=1,name=None)
paddle.fluid.contrib.decoder.beam_search_decoder.InitState(init=None,shape=None,value=0.0,init_boot=None,need_reorder=False,dtype='float32')
paddle.fluid.contrib.decoder.beam_search_decoder.StateCell(inputs,states,out_state,name=None)
paddle.fluid.contrib.decoder.beam_search_decoder.TrainingDecoder(state_cell,name=None)
paddle.fluid.contrib.extend_optimizer.extend_optimizer_with_weight_decay.extend_with_decoupled_weight_decay(base_optimizer)
paddle.fluid.contrib.layers.nn.batch_fc(input,param_size,param_attr,bias_size,bias_attr,act=None)
paddle.fluid.contrib.layers.nn.bilateral_slice(x,guide,grid,has_offset,name=None)
paddle.fluid.contrib.layers.nn.correlation(x,y,pad_size,kernel_size,max_displacement,stride1,stride2,corr_type_multiply=1)
paddle.fluid.contrib.layers.nn.fused_bn_add_act(x,y,momentum=0.9,epsilon=1e-05,param_attr=None,bias_attr=None,moving_mean_name=None,moving_variance_name=None,act=None,name=None)
paddle.fluid.contrib.layers.nn.fused_elemwise_activation(x,y,functor_list,axis=-1,scale=0.0,save_intermediate_out=True)
paddle.fluid.contrib.layers.nn.fused_embedding_seq_pool(input,size,is_sparse=False,padding_idx=None,combiner='sum',param_attr=None,dtype='float32')
paddle.fluid.contrib.layers.nn.fused_seqpool_cvm(input,pool_type,cvm,pad_value=0.0,use_cvm=True,cvm_offset=2)
paddle.fluid.contrib.layers.nn.match_matrix_tensor(x,y,channel_num,act=None,param_attr=None,dtype='float32',name=None)
paddle.fluid.contrib.layers.nn.multiclass_nms2(bboxes,scores,score_threshold,nms_top_k,keep_top_k,nms_threshold=0.3,normalized=True,nms_eta=1.0,background_label=0,return_index=False,name=None)
paddle.fluid.contrib.layers.nn.partial_concat(input,start_index=0,length=-1)
paddle.fluid.contrib.layers.nn.partial_sum(input,start_index=0,length=-1)
paddle.fluid.contrib.layers.nn.rank_attention(input,rank_offset,rank_param_shape,rank_param_attr,max_rank=3,max_size=0)
paddle.fluid.contrib.layers.nn.search_pyramid_hash(input,num_emb,space_len,pyramid_layer,rand_len,drop_out_percent,is_training,use_filter,white_list_len,black_list_len,seed,lr,param_attr=None,param_attr_wl=None,param_attr_bl=None,name=None,distribute_update_vars=None,dtype='float32')
paddle.fluid.contrib.layers.nn.sequence_topk_avg_pooling(input,row,col,topks,channel_num)
paddle.fluid.contrib.layers.nn.shuffle_batch(x,seed=None)
paddle.fluid.contrib.layers.nn.tdm_child(x,node_nums,child_nums,param_attr=None,dtype='int32')
paddle.fluid.contrib.layers.nn.tdm_sampler(x,neg_samples_num_list,layer_node_num_list,leaf_node_num,tree_travel_attr=None,tree_layer_attr=None,output_positive=True,output_list=True,seed=0,tree_dtype='int32',dtype='int32')
paddle.fluid.contrib.layers.nn.tree_conv(nodes_vector,edge_set,output_size,num_filters=1,max_depth=2,act='tanh',param_attr=None,bias_attr=None,name=None)
paddle.fluid.contrib.layers.nn.var_conv_2d(input,row,col,input_channel,output_channel,filter_size,stride=1,param_attr=None,act=None,dtype='float32',name=None)
paddle.fluid.contrib.layers.rnn_impl.basic_gru(input,init_hidden,hidden_size,num_layers=1,sequence_length=None,dropout_prob=0.0,bidirectional=False,batch_first=True,param_attr=None,bias_attr=None,gate_activation=None,activation=None,dtype='float32',name='basic_gru')
paddle.fluid.contrib.layers.rnn_impl.basic_lstm(input,init_hidden,init_cell,hidden_size,num_layers=1,sequence_length=None,dropout_prob=0.0,bidirectional=False,batch_first=True,param_attr=None,bias_attr=None,gate_activation=None,activation=None,forget_bias=1.0,dtype='float32',name='basic_lstm')
paddle.fluid.contrib.layers.rnn_impl.BasicGRUUnit(name_scope,hidden_size,param_attr=None,bias_attr=None,gate_activation=None,activation=None,dtype='float32')
paddle.fluid.contrib.layers.rnn_impl.BasicLSTMUnit(name_scope,hidden_size,param_attr=None,bias_attr=None,gate_activation=None,activation=None,forget_bias=1.0,dtype='float32')
paddle.fluid.contrib.memory_usage_calc.memory_usage(program,batch_size)
paddle.fluid.contrib.mixed_precision.amp_nn.check_finite_and_unscale(x,scale,name=None,float_status=None)
paddle.fluid.contrib.mixed_precision.amp_nn.update_loss_scaling(x,found_inf,prev_loss_scaling,num_good_steps,num_bad_steps,incr_every_n_steps,decr_every_n_nan_or_inf,incr_ratio,decr_ratio,stop_update=False,name=None)
paddle.fluid.contrib.mixed_precision.bf16.amp_lists.AutoMixedPrecisionListsBF16(custom_bf16_list=None,custom_fp32_list=None,custom_fp32_varnames=None)
paddle.fluid.contrib.mixed_precision.bf16.amp_utils.bf16_guard()
paddle.fluid.contrib.mixed_precision.bf16.amp_utils.cast_model_to_bf16(program,startup_prog=None,amp_lists=None,use_bf16_guard=True)
paddle.fluid.contrib.mixed_precision.bf16.amp_utils.cast_parameters_to_bf16(place,program,scope=None,to_bf16_var_names=None)
paddle.fluid.contrib.mixed_precision.bf16.amp_utils.convert_float_to_uint16(in_list)
paddle.fluid.contrib.mixed_precision.bf16.amp_utils.rewrite_program_bf16(main_prog,amp_lists=None)
paddle.fluid.contrib.mixed_precision.bf16.decorator.decorate_bf16(optimizer,amp_lists=None,use_pure_bf16=False,use_bf16_guard=None)
paddle.fluid.contrib.mixed_precision.decorator.decorate(optimizer,amp_lists=None,init_loss_scaling=32768,incr_every_n_steps=1000,decr_every_n_nan_or_inf=2,incr_ratio=2.0,decr_ratio=0.8,use_dynamic_loss_scaling=True,use_pure_fp16=False,use_fp16_guard=None)
paddle.fluid.contrib.mixed_precision.fp16_lists.AutoMixedPrecisionLists(custom_white_list=None,custom_black_list=None,custom_black_varnames=None)
paddle.fluid.contrib.mixed_precision.fp16_utils.cast_model_to_fp16(program,amp_lists=None,use_fp16_guard=True)
paddle.fluid.contrib.mixed_precision.fp16_utils.cast_parameters_to_fp16(place,program,scope=None,to_fp16_var_names=None)
paddle.fluid.contrib.mixed_precision.fp16_utils.fp16_guard()
paddle.fluid.contrib.op_frequence.op_freq_statistic(program)
paddle.fluid.contrib.optimizer.Momentum(learning_rate,momentum,parameter_list=None,use_nesterov=False,regularization=None,grad_clip=None,multi_precision=False,rescale_grad=1.0,name=None)
paddle.fluid.contrib.quantize.quantize_transpiler.QuantizeTranspiler(weight_bits=8,activation_bits=8,activation_quantize_type='abs_max',weight_quantize_type='abs_max',window_size=10000,moving_rate=0.9)
paddle.fluid.contrib.slim.quantization.cal_kl_threshold.cal_kl_threshold(hist,bin_width,bits)
paddle.fluid.contrib.slim.quantization.imperative.ptq.ImperativePTQ(quant_config=<paddle.fluid.contrib.slim.quantization.imperative.ptq_config.PTQConfigobject>)
paddle.fluid.contrib.slim.quantization.imperative.ptq_config.PTQConfig(activation_quantizer,weight_quantizer)
paddle.fluid.contrib.slim.quantization.imperative.ptq_quantizer.AbsmaxQuantizer(quant_bits=8)
paddle.fluid.contrib.slim.quantization.imperative.ptq_quantizer.BaseQuantizer(quant_bits=8)
paddle.fluid.contrib.slim.quantization.imperative.ptq_quantizer.HistQuantizer(quant_bits=8,bins=1024,upsample_bins=64,hist_percent=0.99999)
paddle.fluid.contrib.slim.quantization.imperative.ptq_quantizer.KLQuantizer(quant_bits=8,bins=1024,upsample_bins=64)
paddle.fluid.contrib.slim.quantization.imperative.ptq_quantizer.PerChannelAbsmaxQuantizer(quant_bits=8)
paddle.fluid.contrib.slim.quantization.imperative.ptq_registry.PTQRegistry()
paddle.fluid.contrib.slim.quantization.imperative.qat.ImperativeQuantAware(quantizable_layer_type=['Conv2D','Linear','Conv2DTranspose','ColumnParallelLinear','RowParallelLinear'],weight_quantize_type='abs_max',activation_quantize_type='moving_average_abs_max',weight_bits=8,activation_bits=8,moving_rate=0.9,fuse_conv_bn=False,weight_preprocess_layer=None,act_preprocess_layer=None,weight_quantize_layer=None,act_quantize_layer=None,onnx_format=False)
paddle.fluid.contrib.slim.quantization.post_training_quantization.PostTrainingQuantization(executor,model_dir,scope=None,model_filename=None,params_filename=None,batch_generator=None,sample_generator=None,data_loader=None,batch_size=10,batch_nums=None,algo='KL',hist_percent=0.99999,quantizable_op_type=['conv2d','depthwise_conv2d','mul'],round_type='round',learning_rate=0.001,is_full_quantize=False,bias_correction=False,activation_bits=8,weight_bits=8,activation_quantize_type='range_abs_max',weight_quantize_type='channel_wise_abs_max',onnx_format=False,freeze_model=True,optimize_model=False,is_use_cache_file=False,skip_tensor_list=None,same_scale_tensor_list=None,cache_dir=None,scale_dict=None,return_graph=False)
paddle.fluid.contrib.slim.quantization.post_training_quantization.PostTrainingQuantizationProgram(executor,program,feed_list=None,fetch_list=None,scope=None,batch_generator=None,sample_generator=None,data_loader=None,batch_size=10,batch_nums=None,algo='KL',hist_percent=0.99999,quantizable_op_type=['conv2d','depthwise_conv2d','mul'],round_type='round',learning_rate=0.001,is_full_quantize=False,bias_correction=False,activation_bits=8,weight_bits=8,activation_quantize_type='range_abs_max',weight_quantize_type='channel_wise_abs_max',onnx_format=False,freeze_model=True,optimize_model=False,is_use_cache_file=False,skip_tensor_list=None,same_scale_tensor_list=None,cache_dir=None,scale_dict=None,return_graph=True)
paddle.fluid.contrib.slim.quantization.post_training_quantization.WeightQuantization(model_dir,model_filename=None,params_filename=None)
paddle.fluid.contrib.slim.quantization.quant2_int8_mkldnn_pass.Quant2Int8MkldnnPass(_ops_to_quantize,_op_ids_to_skip=None,_scope=None,_place=None,_core=None,_debug=False)
paddle.fluid.contrib.slim.quantization.quant_int8_mkldnn_pass.QuantInt8MkldnnPass(_scope=None,_place=None)
paddle.fluid.contrib.slim.quantization.quantization_pass.AddQuantDequantForInferencePass(scope,place,quant_bits=8)
paddle.fluid.contrib.slim.quantization.quantization_pass.AddQuantDequantPass(scope=None,place=None,moving_rate=0.9,quant_bits=8,skip_pattern=['skip_quant'],quantizable_op_type=['elementwise_add','pool2d'],is_full_quantized=False,is_test=None,scale_dict=None)
paddle.fluid.contrib.slim.quantization.quantization_pass.AddQuantDequantPassV2(scope=None,place=None,moving_rate=0.9,quant_bits=8,skip_pattern=['skip_quant'],quantizable_op_type=['elementwise_add','pool2d'],is_full_quantized=False,is_test=None,scale_dict=None)
paddle.fluid.contrib.slim.quantization.quantization_pass.ConvertToInt8Pass(scope,place,quantizable_op_type=None)
paddle.fluid.contrib.slim.quantization.quantization_pass.OutScaleForInferencePass(scope=None)
paddle.fluid.contrib.slim.quantization.quantization_pass.OutScaleForTrainingPass(scope=None,place=None,moving_rate=0.9,is_test=None,scale_dict=None)
paddle.fluid.contrib.slim.quantization.quantization_pass.QuantizationFreezePass(scope,place,bias_correction=False,weight_bits=8,activation_bits=8,round_type='round',weight_quantize_type='abs_max',quantizable_op_type=None)
paddle.fluid.contrib.slim.quantization.quantization_pass.QuantizationTransformPass(scope=None,place=None,weight_bits=8,activation_bits=8,activation_quantize_type='abs_max',weight_quantize_type='abs_max',window_size=10000,moving_rate=0.9,skip_pattern=['skip_quant'],quantizable_op_type=['conv2d','depthwise_conv2d','mul'],weight_quantize_func=None,act_quantize_func=None,weight_preprocess_func=None,act_preprocess_func=None,optimizer_func=None,executor=None,is_test=None)
paddle.fluid.contrib.slim.quantization.quantization_pass.QuantizationTransformPassV2(scope=None,place=None,weight_bits=8,activation_bits=8,activation_quantize_type='abs_max',weight_quantize_type='abs_max',window_size=10000,moving_rate=0.9,skip_pattern=['skip_quant'],quantizable_op_type=['conv2d','depthwise_conv2d','mul'],weight_quantize_func=None,act_quantize_func=None,weight_preprocess_func=None,act_preprocess_func=None,optimizer_func=None,executor=None,is_test=None)
paddle.fluid.contrib.slim.quantization.quantization_pass.QuantWeightPass(scope,place,bias_correction=False,quant_bits=8,save_int_weight=True)
paddle.fluid.contrib.slim.quantization.quantization_pass.ReplaceFakeQuantDequantPass(scope,place,quant_bits=8)
paddle.fluid.contrib.slim.quantization.quantization_pass.TransformForMobilePass()
paddle.fluid.contrib.sparsity.utils.check_mask_1d(mat,n,m)
paddle.fluid.contrib.sparsity.utils.check_mask_2d(mat,n,m)
paddle.fluid.contrib.sparsity.utils.check_sparsity(tensor,func_name=CheckMethod.CHECK_1D,n=2,m=4)
paddle.fluid.contrib.sparsity.utils.CheckMethod(value)
paddle.fluid.contrib.sparsity.utils.create_mask(tensor,func_name=MaskAlgo.MASK_1D,n=2,m=4)
paddle.fluid.contrib.sparsity.utils.get_mask_1d(mat,n,m)
paddle.fluid.contrib.sparsity.utils.get_mask_2d_best(mat,n,m)
paddle.fluid.contrib.sparsity.utils.get_mask_2d_greedy(mat,n,m)
paddle.fluid.contrib.sparsity.utils.MaskAlgo(value)
paddle.fluid.data(name,shape,dtype='float32',lod_level=0)
paddle.fluid.data_feed_desc.DataFeedDesc(proto_file)
paddle.fluid.data_feeder.DataFeeder(feed_list,place,program=None)
paddle.fluid.dataloader.collate.default_collate_fn(batch)
paddle.fluid.dataset.DatasetFactory()
paddle.fluid.dataset.InMemoryDataset()
paddle.fluid.dataset.QueueDataset()
paddle.fluid.device_worker.DeviceWorker()
paddle.fluid.device_worker.DownpourSGD()
paddle.fluid.device_worker.DownpourSGDOPT()
paddle.fluid.device_worker.HeterSection()
paddle.fluid.device_worker.Hogwild()
paddle.fluid.device_worker.Section()
paddle.fluid.dygraph.amp.auto_cast.amp_decorate(models,optimizers=None,level='O1',master_weight=None,save_dtype=None)
paddle.fluid.dygraph.amp.auto_cast.amp_guard(enable=True,custom_white_list=None,custom_black_list=None,level='O1',dtype='float16')
paddle.fluid.dygraph.amp.loss_scaler.AmpScaler(enable=True,init_loss_scaling=32768.0,incr_ratio=2.0,decr_ratio=0.5,incr_every_n_steps=1000,decr_every_n_nan_or_inf=1,use_dynamic_loss_scaling=True)
paddle.fluid.dygraph.amp.loss_scaler.OptimizerState(value)
paddle.fluid.dygraph.base.enabled()
paddle.fluid.dygraph.base.guard(place=None)
paddle.fluid.dygraph.base.no_grad(func=None)
paddle.fluid.dygraph.base.to_variable(value,name=None,zero_copy=None,dtype=None)
paddle.fluid.dygraph.checkpoint.load_dygraph(model_path,**configs)
paddle.fluid.dygraph.checkpoint.save_dygraph(state_dict,model_path)
paddle.fluid.dygraph.dygraph_to_static.ast_transformer.DygraphToStaticAst()
paddle.fluid.dygraph.dygraph_to_static.break_continue_transformer.BreakContinueTransformer(wrapper_root)
paddle.fluid.dygraph.dygraph_to_static.convert_call_func.convert_call(func)
paddle.fluid.dygraph.dygraph_to_static.logging_utils.TranslatorLogger(**kwargs)
paddle.fluid.dygraph.dygraph_to_static.loop_transformer.LoopTransformer(wrapper_root)
paddle.fluid.dygraph.dygraph_to_static.loop_transformer.NameVisitor(root_node)
paddle.fluid.dygraph.dygraph_to_static.program_translator.convert_to_static(function)
paddle.fluid.dygraph.dygraph_to_static.return_transformer.ReturnTransformer(wrapper_root)
paddle.fluid.dygraph.dygraph_to_static.static_analysis.AstNodeWrapper(node)
paddle.fluid.dygraph.dygraph_to_static.static_analysis.NodeVarType()
paddle.fluid.dygraph.dygraph_to_static.static_analysis.StaticAnalysisVisitor(ast_root=None)
paddle.fluid.dygraph.dygraph_to_static.variable_trans_func.create_bool_as_type(x,value=True)
paddle.fluid.dygraph.dygraph_to_static.variable_trans_func.create_fill_constant_node(name,value=0)
paddle.fluid.dygraph.dygraph_to_static.variable_trans_func.create_undefined_var(name)
paddle.fluid.dygraph.dygraph_to_static.variable_trans_func.to_static_variable(x)
paddle.fluid.dygraph.jit.dygraph_to_static_func(func,*args,**kwargs)
paddle.fluid.dygraph.learning_rate_scheduler.CosineDecay(learning_rate,step_each_epoch,epochs,begin=0,step=1,dtype='float32')
paddle.fluid.dygraph.learning_rate_scheduler.ExponentialDecay(learning_rate,decay_steps,decay_rate,staircase=False,begin=0,step=1,dtype='float32')
paddle.fluid.dygraph.learning_rate_scheduler.InverseTimeDecay(learning_rate,decay_steps,decay_rate,staircase=False,begin=0,step=1,dtype='float32')
paddle.fluid.dygraph.learning_rate_scheduler.LambdaDecay(learning_rate,lr_lambda)
paddle.fluid.dygraph.learning_rate_scheduler.LinearLrWarmup(learning_rate,warmup_steps,start_lr,end_lr,begin=1,step=1,dtype='float32')
paddle.fluid.dygraph.learning_rate_scheduler.MultiStepDecay(learning_rate,milestones,decay_rate=0.1)
paddle.fluid.dygraph.learning_rate_scheduler.NaturalExpDecay(learning_rate,decay_steps,decay_rate,staircase=False,begin=0,step=1,dtype='float32')
paddle.fluid.dygraph.learning_rate_scheduler.NoamDecay(d_model,warmup_steps,begin=1,step=1,dtype='float32',learning_rate=1.0)
paddle.fluid.dygraph.learning_rate_scheduler.PiecewiseDecay(boundaries,values,begin,step=1,dtype='float32')
paddle.fluid.dygraph.learning_rate_scheduler.PolynomialDecay(learning_rate,decay_steps,end_learning_rate=0.0001,power=1.0,cycle=False,begin=0,step=1,dtype='float32')
paddle.fluid.dygraph.learning_rate_scheduler.ReduceLROnPlateau(learning_rate,mode='min',decay_rate=0.1,patience=10,verbose=False,threshold=0.0001,threshold_mode='rel',cooldown=0,min_lr=0,eps=1e-08,dtype='float32')
paddle.fluid.dygraph.learning_rate_scheduler.StepDecay(learning_rate,step_size,decay_rate=0.1)
paddle.fluid.dygraph.nn.BilinearTensorProduct(input1_dim,input2_dim,output_dim,name=None,act=None,param_attr=None,bias_attr=None,dtype='float32')
paddle.fluid.dygraph.nn.Conv2D(num_channels,num_filters,filter_size,stride=1,padding=0,dilation=1,groups=None,param_attr=None,bias_attr=None,use_cudnn=True,act=None,dtype='float32')
paddle.fluid.dygraph.nn.Conv2DTranspose(num_channels,num_filters,filter_size,output_size=None,padding=0,stride=1,dilation=1,groups=None,param_attr=None,bias_attr=None,use_cudnn=True,act=None,dtype='float32')
paddle.fluid.dygraph.nn.Conv3D(num_channels,num_filters,filter_size,stride=1,padding=0,dilation=1,groups=None,param_attr=None,bias_attr=None,use_cudnn=True,act=None,dtype='float32')
paddle.fluid.dygraph.nn.Conv3DTranspose(num_channels,num_filters,filter_size,padding=0,stride=1,dilation=1,groups=None,param_attr=None,bias_attr=None,use_cudnn=True,act=None,dtype='float32')
paddle.fluid.dygraph.nn.Dropout(p=0.5,seed=None,dropout_implementation='downgrade_in_infer',is_test=False)
paddle.fluid.dygraph.nn.Embedding(size,is_sparse=False,is_distributed=False,padding_idx=None,param_attr=None,dtype='float32')
paddle.fluid.dygraph.nn.GroupNorm(channels,groups,epsilon=1e-05,param_attr=None,bias_attr=None,act=None,data_layout='NCHW',dtype='float32')
paddle.fluid.dygraph.nn.GRUUnit(size,param_attr=None,bias_attr=None,activation='tanh',gate_activation='sigmoid',origin_mode=False,dtype='float32')
paddle.fluid.dygraph.nn.InstanceNorm(num_channels,epsilon=1e-05,param_attr=None,bias_attr=None,dtype='float32')
paddle.fluid.dygraph.nn.LayerNorm(normalized_shape,scale=True,shift=True,epsilon=1e-05,param_attr=None,bias_attr=None,act=None,dtype='float32')
paddle.fluid.dygraph.nn.Linear(input_dim,output_dim,param_attr=None,bias_attr=None,act=None,dtype='float32')
paddle.fluid.dygraph.nn.NCE(num_total_classes,dim,sample_weight=None,param_attr=None,bias_attr=None,num_neg_samples=None,sampler='uniform',custom_dist=None,seed=0,is_sparse=False,dtype='float32')
paddle.fluid.dygraph.nn.Pool2D(pool_size=-1,pool_type='max',pool_stride=1,pool_padding=0,global_pooling=False,use_cudnn=True,ceil_mode=False,exclusive=True,data_format='NCHW')
paddle.fluid.dygraph.nn.PRelu(mode,channel=None,input_shape=None,param_attr=None,dtype='float32')
paddle.fluid.dygraph.nn.TreeConv(feature_size,output_size,num_filters=1,max_depth=2,act='tanh',param_attr=None,bias_attr=None,name=None,dtype='float32')
paddle.fluid.dygraph.parallel.prepare_context(strategy=None)
paddle.fluid.dygraph.rnn.GRUCell(hidden_size,input_size,param_attr=None,bias_attr=None,gate_activation=None,activation=None,use_cudnn_impl=True,dtype='float64')
paddle.fluid.dygraph.rnn.LSTMCell(hidden_size,input_size,param_attr=None,bias_attr=None,gate_activation=None,activation=None,forget_bias=1.0,use_cudnn_impl=True,dtype='float64')
paddle.fluid.evaluator.ChunkEvaluator(input,label,chunk_scheme,num_chunk_types,excluded_chunk_types=None)
paddle.fluid.evaluator.DetectionMAP(input,gt_label,gt_box,gt_difficult=None,class_num=None,background_label=0,overlap_threshold=0.5,evaluate_difficult=True,ap_version='integral')
paddle.fluid.evaluator.EditDistance(input,label,ignored_tokens=None,**kwargs)
paddle.fluid.framework.cuda_pinned_places(device_count=None)
paddle.fluid.framework.in_dygraph_mode()
paddle.fluid.framework.is_compiled_with_npu()
paddle.fluid.framework.is_compiled_with_xpu()
paddle.fluid.generator.Generator(place=None)
paddle.fluid.incubate.fleet.parameter_server.pslib.optimizer_factory.DistributedAdam(optimizer)
paddle.fluid.initializer.ConstantInitializer(value=0.0,force_cpu=False)
paddle.fluid.initializer.MSRAInitializer(uniform=True,fan_in=None,seed=0,negative_slope=0,nonlinearity='relu')
paddle.fluid.initializer.NormalInitializer(loc=0.0,scale=1.0,seed=0)
paddle.fluid.initializer.NumpyArrayInitializer(value)
paddle.fluid.initializer.TruncatedNormalInitializer(loc=0.0,scale=1.0,seed=0)
paddle.fluid.initializer.UniformInitializer(low=-1.0,high=1.0,seed=0,diag_num=0,diag_step=0,diag_val=1.0)
paddle.fluid.initializer.XavierInitializer(uniform=True,fan_in=None,fan_out=None,seed=0)
paddle.fluid.input.one_hot(input,depth,allow_out_of_range=False)
paddle.fluid.install_check.run_check()
paddle.fluid.io.get_program_parameter(program)
paddle.fluid.io.get_program_persistable_vars(program)
paddle.fluid.io.load_inference_model(dirname,executor,model_filename=None,params_filename=None,pserver_endpoints=None)
paddle.fluid.io.load_params(executor,dirname,main_program=None,filename=None)
paddle.fluid.io.load_persistables(executor,dirname,main_program=None,filename=None)
paddle.fluid.io.load_vars(executor,dirname,main_program=None,vars=None,predicate=None,filename=None)
paddle.fluid.io.save_inference_model(dirname,feeded_var_names,target_vars,executor,main_program=None,model_filename=None,params_filename=None,export_for_deployment=True,program_only=False,clip_extra=True)
paddle.fluid.io.save_params(executor,dirname,main_program=None,filename=None)
paddle.fluid.io.save_persistables(executor,dirname,main_program=None,filename=None)
paddle.fluid.io.save_vars(executor,dirname,main_program=None,vars=None,predicate=None,filename=None)
paddle.fluid.layer_helper_base.LayerHelperBase(name,layer_type)
paddle.fluid.layers.BasicDecoder(cell,helper,output_fn=None)
paddle.fluid.layers.beam_search(pre_ids,pre_scores,ids,scores,beam_size,end_id,level=0,is_accumulated=True,name=None,return_parent_idx=False)
paddle.fluid.layers.beam_search_decode(ids,scores,beam_size,end_id,name=None)
paddle.fluid.layers.birnn(cell_fw,cell_bw,inputs,initial_states=None,sequence_length=None,time_major=False,**kwargs)
paddle.fluid.layers.control_flow.array_length(array)
paddle.fluid.layers.control_flow.array_read(array,i)
paddle.fluid.layers.control_flow.array_write(x,i,array=None)
paddle.fluid.layers.control_flow.Assert(cond,data=None,summarize=20,name=None)
paddle.fluid.layers.control_flow.create_array(dtype,initialized_list=None)
paddle.fluid.layers.control_flow.DynamicRNN(name=None)
paddle.fluid.layers.control_flow.equal(x,y,cond=None,name=None)
paddle.fluid.layers.control_flow.greater_equal(x,y,cond=None,name=None)
paddle.fluid.layers.control_flow.greater_than(x,y,cond=None,name=None)
paddle.fluid.layers.control_flow.IfElse(cond,name=None)
paddle.fluid.layers.control_flow.increment(x,value=1.0,in_place=True)
paddle.fluid.layers.control_flow.is_empty(x,name=None)
paddle.fluid.layers.control_flow.less_equal(x,y,cond=None,name=None)
paddle.fluid.layers.control_flow.less_than(x,y,force_cpu=None,cond=None,name=None)
paddle.fluid.layers.control_flow.not_equal(x,y,cond=None,name=None)
paddle.fluid.layers.control_flow.reorder_lod_tensor_by_rank(x,rank_table)
paddle.fluid.layers.control_flow.Switch(name=None)
paddle.fluid.layers.control_flow.While(cond,is_test=False,name=None)
paddle.fluid.layers.DecodeHelper()
paddle.fluid.layers.Decoder()
paddle.fluid.layers.detection.anchor_generator(input,anchor_sizes=None,aspect_ratios=None,variance=[0.1,0.1,0.2,0.2],stride=None,offset=0.5,name=None)
paddle.fluid.layers.detection.bipartite_match(dist_matrix,match_type=None,dist_threshold=None,name=None)
paddle.fluid.layers.detection.box_clip(input,im_info,name=None)
paddle.fluid.layers.detection.box_coder(prior_box,prior_box_var,target_box,code_type='encode_center_size',box_normalized=True,name=None,axis=0)
paddle.fluid.layers.detection.box_decoder_and_assign(prior_box,prior_box_var,target_box,box_score,box_clip,name=None)
paddle.fluid.layers.detection.collect_fpn_proposals(multi_rois,multi_scores,min_level,max_level,post_nms_top_n,rois_num_per_level=None,name=None)
paddle.fluid.layers.detection.density_prior_box(input,image,densities=None,fixed_sizes=None,fixed_ratios=None,variance=[0.1,0.1,0.2,0.2],clip=False,steps=[0.0,0.0],offset=0.5,flatten_to_2d=False,name=None)
paddle.fluid.layers.detection.detection_output(loc,scores,prior_box,prior_box_var,background_label=0,nms_threshold=0.3,nms_top_k=400,keep_top_k=200,score_threshold=0.01,nms_eta=1.0,return_index=False)
paddle.fluid.layers.detection.distribute_fpn_proposals(fpn_rois,min_level,max_level,refer_level,refer_scale,rois_num=None,name=None)
paddle.fluid.layers.detection.generate_mask_labels(im_info,gt_classes,is_crowd,gt_segms,rois,labels_int32,num_classes,resolution)
paddle.fluid.layers.detection.generate_proposal_labels(rpn_rois,gt_classes,is_crowd,gt_boxes,im_info,batch_size_per_im=256,fg_fraction=0.25,fg_thresh=0.25,bg_thresh_hi=0.5,bg_thresh_lo=0.0,bbox_reg_weights=[0.1,0.1,0.2,0.2],class_nums=None,use_random=True,is_cls_agnostic=False,is_cascade_rcnn=False,max_overlap=None,return_max_overlap=False)
paddle.fluid.layers.detection.generate_proposals(scores,bbox_deltas,im_info,anchors,variances,pre_nms_top_n=6000,post_nms_top_n=1000,nms_thresh=0.5,min_size=0.1,eta=1.0,return_rois_num=False,name=None)
paddle.fluid.layers.detection.iou_similarity(x,y,box_normalized=True,name=None)
paddle.fluid.layers.detection.locality_aware_nms(bboxes,scores,score_threshold,nms_top_k,keep_top_k,nms_threshold=0.3,normalized=True,nms_eta=1.0,background_label=-1,name=None)
paddle.fluid.layers.detection.matrix_nms(bboxes,scores,score_threshold,post_threshold,nms_top_k,keep_top_k,use_gaussian=False,gaussian_sigma=2.0,background_label=0,normalized=True,return_index=False,name=None)
paddle.fluid.layers.detection.multiclass_nms(bboxes,scores,score_threshold,nms_top_k,keep_top_k,nms_threshold=0.3,normalized=True,nms_eta=1.0,background_label=0,name=None)
paddle.fluid.layers.detection.polygon_box_transform(input,name=None)
paddle.fluid.layers.detection.prior_box(input,image,min_sizes,max_sizes=None,aspect_ratios=[1.0],variance=[0.1,0.1,0.2,0.2],flip=False,clip=False,steps=[0.0,0.0],offset=0.5,name=None,min_max_aspect_ratios_order=False)
paddle.fluid.layers.detection.retinanet_detection_output(bboxes,scores,anchors,im_info,score_threshold=0.05,nms_top_k=1000,keep_top_k=100,nms_threshold=0.3,nms_eta=1.0)
paddle.fluid.layers.detection.retinanet_target_assign(bbox_pred,cls_logits,anchor_box,anchor_var,gt_boxes,gt_labels,is_crowd,im_info,num_classes=1,positive_overlap=0.5,negative_overlap=0.4)
paddle.fluid.layers.detection.roi_perspective_transform(input,rois,transformed_height,transformed_width,spatial_scale=1.0,name=None)
paddle.fluid.layers.detection.rpn_target_assign(bbox_pred,cls_logits,anchor_box,anchor_var,gt_boxes,is_crowd,im_info,rpn_batch_size_per_im=256,rpn_straddle_thresh=0.0,rpn_fg_fraction=0.5,rpn_positive_overlap=0.7,rpn_negative_overlap=0.3,use_random=True)
paddle.fluid.layers.detection.sigmoid_focal_loss(x,label,fg_num,gamma=2.0,alpha=0.25)
paddle.fluid.layers.detection.ssd_loss(location,confidence,gt_box,gt_label,prior_box,prior_box_var=None,background_label=0,overlap_threshold=0.5,neg_pos_ratio=3.0,neg_overlap=0.5,loc_loss_weight=1.0,conf_loss_weight=1.0,match_type='per_prediction',mining_type='max_negative',normalize=True,sample_size=None)
paddle.fluid.layers.detection.target_assign(input,matched_indices,negative_indices=None,mismatch_value=None,name=None)
paddle.fluid.layers.detection.yolo_box(x,img_size,anchors,class_num,conf_thresh,downsample_ratio,clip_bbox=True,name=None,scale_x_y=1.0,iou_aware=False,iou_aware_factor=0.5)
paddle.fluid.layers.detection.yolov3_loss(x,gt_box,gt_label,anchors,anchor_mask,class_num,ignore_thresh,downsample_ratio,gt_score=None,use_label_smooth=True,name=None,scale_x_y=1.0)
paddle.fluid.layers.distributions.Categorical(logits)
paddle.fluid.layers.distributions.MultivariateNormalDiag(loc,scale)
paddle.fluid.layers.distributions.Normal(loc,scale)
paddle.fluid.layers.distributions.Uniform(low,high)
paddle.fluid.layers.dynamic_gru(input,size,param_attr=None,bias_attr=None,is_reverse=False,gate_activation='sigmoid',candidate_activation='tanh',h_0=None,origin_mode=False)
paddle.fluid.layers.dynamic_lstm(input,size,h_0=None,c_0=None,param_attr=None,bias_attr=None,use_peepholes=True,is_reverse=False,gate_activation='sigmoid',cell_activation='tanh',candidate_activation='tanh',dtype='float32',name=None)
paddle.fluid.layers.dynamic_lstmp(input,size,proj_size,param_attr=None,bias_attr=None,use_peepholes=True,is_reverse=False,gate_activation='sigmoid',cell_activation='tanh',candidate_activation='tanh',proj_activation='tanh',dtype='float32',name=None,h_0=None,c_0=None,cell_clip=None,proj_clip=None)
paddle.fluid.layers.GreedyEmbeddingHelper(embedding_fn,start_tokens,end_token)
paddle.fluid.layers.gru_unit(input,hidden,size,param_attr=None,bias_attr=None,activation='tanh',gate_activation='sigmoid',origin_mode=False)
paddle.fluid.layers.GRUCell(hidden_size,param_attr=None,bias_attr=None,gate_activation=None,activation=None,dtype='float32',name='GRUCell')
paddle.fluid.layers.io.create_py_reader_by_data(capacity,feed_list,name=None,use_double_buffer=True)
paddle.fluid.layers.io.data(name,shape,append_batch_size=True,dtype='float32',lod_level=0,type=VarType.LOD_TENSOR,stop_gradient=True)
paddle.fluid.layers.io.double_buffer(reader,place=None,name=None)
paddle.fluid.layers.io.load(out,file_path,load_as_fp16=None)
paddle.fluid.layers.io.py_reader(capacity,shapes,dtypes,lod_levels=None,name=None,use_double_buffer=True)
paddle.fluid.layers.io.read_file(reader)
paddle.fluid.layers.layer_function_generator.autodoc(comment='')
paddle.fluid.layers.layer_function_generator.generate_activation_fn(op_type)
paddle.fluid.layers.layer_function_generator.generate_inplace_fn(inplace_op_type)
paddle.fluid.layers.layer_function_generator.generate_layer_fn(op_type)
paddle.fluid.layers.layer_function_generator.templatedoc(op_type=None)
paddle.fluid.layers.learning_rate_scheduler.cosine_decay(learning_rate,step_each_epoch,epochs)
paddle.fluid.layers.learning_rate_scheduler.inverse_time_decay(learning_rate,decay_steps,decay_rate,staircase=False)
paddle.fluid.layers.learning_rate_scheduler.linear_lr_warmup(learning_rate,warmup_steps,start_lr,end_lr)
paddle.fluid.layers.learning_rate_scheduler.natural_exp_decay(learning_rate,decay_steps,decay_rate,staircase=False)
paddle.fluid.layers.learning_rate_scheduler.noam_decay(d_model,warmup_steps,learning_rate=1.0)
paddle.fluid.layers.learning_rate_scheduler.piecewise_decay(boundaries,values)
paddle.fluid.layers.learning_rate_scheduler.polynomial_decay(learning_rate,decay_steps,end_learning_rate=0.0001,power=1.0,cycle=False)
paddle.fluid.layers.loss.bpr_loss(input,label,name=None)
paddle.fluid.layers.loss.center_loss(input,label,num_classes,alpha,param_attr,update_center=True)
paddle.fluid.layers.loss.cross_entropy(input,label,soft_label=False,ignore_index=-100)
paddle.fluid.layers.loss.edit_distance(input,label,normalized=True,ignored_tokens=None,input_length=None,label_length=None)
paddle.fluid.layers.loss.hsigmoid(input,label,num_classes,param_attr=None,bias_attr=None,name=None,path_table=None,path_code=None,is_custom=False,is_sparse=False)
paddle.fluid.layers.loss.huber_loss(input,label,delta)
paddle.fluid.layers.loss.kldiv_loss(x,target,reduction='mean',name=None)
paddle.fluid.layers.loss.margin_rank_loss(label,left,right,margin=0.1,name=None)
paddle.fluid.layers.loss.mse_loss(input,label)
paddle.fluid.layers.loss.npair_loss(anchor,positive,labels,l2_reg=0.002)
paddle.fluid.layers.loss.rank_loss(label,left,right,name=None)
paddle.fluid.layers.loss.sampled_softmax_with_cross_entropy(logits,label,num_samples,num_true=1,remove_accidental_hits=True,use_customized_samples=False,customized_samples=None,customized_probabilities=None,seed=0)
paddle.fluid.layers.loss.sigmoid_cross_entropy_with_logits(x,label,ignore_index=-100,name=None,normalize=False)
paddle.fluid.layers.loss.softmax_with_cross_entropy(logits,label,soft_label=False,ignore_index=-100,numeric_stable_mode=True,return_softmax=False,axis=-1)
paddle.fluid.layers.loss.square_error_cost(input,label)
paddle.fluid.layers.loss.teacher_student_sigmoid_loss(input,label,soft_max_up_bound=15.0,soft_max_lower_bound=-15.0)
paddle.fluid.layers.loss.warpctc(input,label,blank=0,norm_by_times=False,input_length=None,label_length=None)
paddle.fluid.layers.lstm(input,init_h,init_c,max_len,hidden_size,num_layers,dropout_prob=0.0,is_bidirec=False,is_test=False,name=None,default_initializer=None,seed=-1)
paddle.fluid.layers.lstm_unit(x_t,hidden_t_prev,cell_t_prev,forget_bias=0.0,param_attr=None,bias_attr=None,name=None)
paddle.fluid.layers.LSTMCell(hidden_size,param_attr=None,bias_attr=None,gate_activation=None,activation=None,forget_bias=1.0,dtype='float32',name='LSTMCell')
paddle.fluid.layers.nn.adaptive_pool2d(input,pool_size,pool_type='max',require_index=False,name=None)
paddle.fluid.layers.nn.adaptive_pool3d(input,pool_size,pool_type='max',require_index=False,name=None)
paddle.fluid.layers.nn.add_position_encoding(input,alpha,beta,name=None)
paddle.fluid.layers.nn.affine_channel(x,scale=None,bias=None,data_layout='NCHW',name=None,act=None)
paddle.fluid.layers.nn.affine_grid(theta,out_shape,name=None)
paddle.fluid.layers.nn.autoincreased_step_counter(counter_name=None,begin=1,step=1)
paddle.fluid.layers.nn.brelu(x,t_min=0.0,t_max=24.0,name=None)
paddle.fluid.layers.nn.chunk_eval(input,label,chunk_scheme,num_chunk_types,excluded_chunk_types=None,seq_length=None)
paddle.fluid.layers.nn.clip(x,min,max,name=None)
paddle.fluid.layers.nn.clip_by_norm(x,max_norm,name=None)
paddle.fluid.layers.nn.continuous_value_model(input,cvm,use_cvm=True)
paddle.fluid.layers.nn.cos_sim(X,Y)
paddle.fluid.layers.nn.crop(x,shape=None,offsets=None,name=None)
paddle.fluid.layers.nn.crop_tensor(x,shape=None,offsets=None,name=None)
paddle.fluid.layers.nn.ctc_greedy_decoder(input,blank,input_length=None,padding_value=0,name=None)
paddle.fluid.layers.nn.deformable_conv(input,offset,mask,num_filters,filter_size,stride=1,padding=0,dilation=1,groups=None,deformable_groups=None,im2col_step=None,param_attr=None,bias_attr=None,modulated=True,name=None)
paddle.fluid.layers.nn.deformable_roi_pooling(input,rois,trans,no_trans=False,spatial_scale=1.0,group_size=[1,1],pooled_height=1,pooled_width=1,part_size=None,sample_per_part=1,trans_std=0.1,position_sensitive=False,name=None)
paddle.fluid.layers.nn.dice_loss(input,label,epsilon=1e-05,name=None)
paddle.fluid.layers.nn.dropout(x,dropout_prob,is_test=None,seed=None,name=None,dropout_implementation='downgrade_in_infer')
paddle.fluid.layers.nn.elementwise_add(x,y,axis=-1,act=None,name=None)
paddle.fluid.layers.nn.elementwise_div(x,y,axis=-1,act=None,name=None)
paddle.fluid.layers.nn.elementwise_floordiv(x,y,axis=-1,act=None,name=None)
paddle.fluid.layers.nn.elementwise_max(x,y,axis=-1,act=None,name=None)
paddle.fluid.layers.nn.elementwise_min(x,y,axis=-1,act=None,name=None)
paddle.fluid.layers.nn.elementwise_mod(x,y,axis=-1,act=None,name=None)
paddle.fluid.layers.nn.elementwise_mul(x,y,axis=-1,act=None,name=None)
paddle.fluid.layers.nn.elementwise_pow(x,y,axis=-1,act=None,name=None)
paddle.fluid.layers.nn.elementwise_sub(x,y,axis=-1,act=None,name=None)
paddle.fluid.layers.nn.elu(x,alpha=1.0,name=None)
paddle.fluid.layers.nn.embedding(input,size,is_sparse=False,is_distributed=False,padding_idx=None,param_attr=None,dtype='float32')
paddle.fluid.layers.nn.expand(x,expand_times,name=None)
paddle.fluid.layers.nn.expand_as(x,target_tensor,name=None)
paddle.fluid.layers.nn.fc(input,size,num_flatten_dims=1,param_attr=None,bias_attr=None,act=None,name=None)
paddle.fluid.layers.nn.filter_by_instag(ins,ins_tag,filter_tag,is_lod,out_val_if_empty=0)
paddle.fluid.layers.nn.flatten(x,axis=1,name=None)
paddle.fluid.layers.nn.fsp_matrix(x,y)
paddle.fluid.layers.nn.gather(input,index,overwrite=True)
paddle.fluid.layers.nn.gather_nd(input,index,name=None)
paddle.fluid.layers.nn.gather_tree(ids,parents)
paddle.fluid.layers.nn.gaussian_random(shape,mean=0.0,std=1.0,seed=0,dtype='float32',name=None)
paddle.fluid.layers.nn.gaussian_random_batch_size_like(input,shape,input_dim_idx=0,output_dim_idx=0,mean=0.0,std=1.0,seed=0,dtype='float32')
paddle.fluid.layers.nn.get_tensor_from_selected_rows(x,name=None)
paddle.fluid.layers.nn.grid_sampler(x,grid,name=None)
paddle.fluid.layers.nn.hard_sigmoid(x,slope=0.2,offset=0.5,name=None)
paddle.fluid.layers.nn.hard_swish(x,threshold=6.0,scale=6.0,offset=3.0,name=None)
paddle.fluid.layers.nn.hash(input,hash_size,num_hash=1,name=None)
paddle.fluid.layers.nn.im2sequence(input,filter_size=1,stride=1,padding=0,input_image_size=None,out_stride=1,name=None)
paddle.fluid.layers.nn.image_resize(input,out_shape=None,scale=None,name=None,resample='BILINEAR',actual_shape=None,align_corners=True,align_mode=1,data_format='NCHW')
paddle.fluid.layers.nn.image_resize_short(input,out_short_len,resample='BILINEAR')
paddle.fluid.layers.nn.inplace_abn(input,act=None,is_test=False,momentum=0.9,epsilon=1e-05,param_attr=None,bias_attr=None,data_layout='NCHW',name=None,moving_mean_name=None,moving_variance_name=None,do_model_average_for_mean_and_var=True,use_global_stats=False,act_alpha=1.0)
paddle.fluid.layers.nn.l2_normalize(x,axis,epsilon=1e-12,name=None)
paddle.fluid.layers.nn.label_smooth(label,prior_dist=None,epsilon=0.1,dtype='float32',name=None)
paddle.fluid.layers.nn.leaky_relu(x,alpha=0.02,name=None)
paddle.fluid.layers.nn.linear_chain_crf(input,label,param_attr=None,length=None)
paddle.fluid.layers.nn.lod_append(x,level)
paddle.fluid.layers.nn.lod_reset(x,y=None,target_lod=None)
paddle.fluid.layers.nn.log(x,name=None)
paddle.fluid.layers.nn.log_loss(input,label,epsilon=0.0001,name=None)
paddle.fluid.layers.nn.logical_and(x,y,out=None,name=None)
paddle.fluid.layers.nn.logical_not(x,out=None,name=None)
paddle.fluid.layers.nn.logical_or(x,y,out=None,name=None)
paddle.fluid.layers.nn.logical_xor(x,y,out=None,name=None)
paddle.fluid.layers.nn.lrn(input,n=5,k=1.0,alpha=0.0001,beta=0.75,name=None,data_format='NCHW')
paddle.fluid.layers.nn.matmul(x,y,transpose_x=False,transpose_y=False,alpha=1.0,name=None)
paddle.fluid.layers.nn.maxout(x,groups,name=None,axis=1)
paddle.fluid.layers.nn.mean(x,name=None)
paddle.fluid.layers.nn.mean_iou(input,label,num_classes)
paddle.fluid.layers.nn.merge_selected_rows(x,name=None)
paddle.fluid.layers.nn.mish(x,threshold=20,name=None)
paddle.fluid.layers.nn.mul(x,y,x_num_col_dims=1,y_num_col_dims=1,name=None)
paddle.fluid.layers.nn.multiplex(inputs,index,name=None)
paddle.fluid.layers.nn.one_hot(input,depth,allow_out_of_range=False)
paddle.fluid.layers.nn.pad(x,paddings,pad_value=0.0,name=None)
paddle.fluid.layers.nn.pad2d(input,paddings=[0,0,0,0],mode='constant',pad_value=0.0,data_format='NCHW',name=None)
paddle.fluid.layers.nn.pad_constant_like(x,y,pad_value=0.0,name=None)
paddle.fluid.layers.nn.pixel_shuffle(x,upscale_factor)
paddle.fluid.layers.nn.pool2d(input,pool_size=-1,pool_type='max',pool_stride=1,pool_padding=0,global_pooling=False,use_cudnn=True,ceil_mode=False,name=None,exclusive=True,data_format='NCHW')
paddle.fluid.layers.nn.pool3d(input,pool_size=-1,pool_type='max',pool_stride=1,pool_padding=0,global_pooling=False,use_cudnn=True,ceil_mode=False,name=None,exclusive=True,data_format='NCDHW')
paddle.fluid.layers.nn.pow(x,factor=1.0,name=None)
paddle.fluid.layers.nn.prroi_pool(input,rois,spatial_scale=1.0,pooled_height=1,pooled_width=1,batch_roi_nums=None,name=None)
paddle.fluid.layers.nn.psroi_pool(input,rois,output_channels,spatial_scale,pooled_height,pooled_width,name=None)
paddle.fluid.layers.nn.random_crop(x,shape,seed=None)
paddle.fluid.layers.nn.rank(input)
paddle.fluid.layers.nn.reduce_all(input,dim=None,keep_dim=False,name=None)
paddle.fluid.layers.nn.reduce_any(input,dim=None,keep_dim=False,name=None)
paddle.fluid.layers.nn.reduce_max(input,dim=None,keep_dim=False,name=None)
paddle.fluid.layers.nn.reduce_mean(input,dim=None,keep_dim=False,name=None)
paddle.fluid.layers.nn.reduce_min(input,dim=None,keep_dim=False,name=None)
paddle.fluid.layers.nn.reduce_prod(input,dim=None,keep_dim=False,name=None)
paddle.fluid.layers.nn.reduce_sum(input,dim=None,keep_dim=False,name=None)
paddle.fluid.layers.nn.relu(x,name=None)
paddle.fluid.layers.nn.relu6(x,threshold=6.0,name=None)
paddle.fluid.layers.nn.reshape(x,shape,actual_shape=None,act=None,inplace=False,name=None)
paddle.fluid.layers.nn.resize_bilinear(input,out_shape=None,scale=None,name=None,actual_shape=None,align_corners=True,align_mode=1,data_format='NCHW')
paddle.fluid.layers.nn.resize_linear(input,out_shape=None,scale=None,name=None,actual_shape=None,align_corners=True,align_mode=1,data_format='NCW')
paddle.fluid.layers.nn.resize_nearest(input,out_shape=None,scale=None,name=None,actual_shape=None,align_corners=True,data_format='NCHW')
paddle.fluid.layers.nn.resize_trilinear(input,out_shape=None,scale=None,name=None,actual_shape=None,align_corners=True,align_mode=1,data_format='NCDHW')
paddle.fluid.layers.nn.roi_align(input,rois,pooled_height=1,pooled_width=1,spatial_scale=1.0,sampling_ratio=-1,rois_num=None,name=None)
paddle.fluid.layers.nn.roi_pool(input,rois,pooled_height=1,pooled_width=1,spatial_scale=1.0,rois_num=None,name=None)
paddle.fluid.layers.nn.sampling_id(x,min=0.0,max=1.0,seed=0,dtype='float32')
paddle.fluid.layers.nn.scale(x,scale=1.0,bias=0.0,bias_after_scale=True,act=None,name=None)
paddle.fluid.layers.nn.scatter(input,index,updates,name=None,overwrite=True)
paddle.fluid.layers.nn.scatter_nd(index,updates,shape,name=None)
paddle.fluid.layers.nn.scatter_nd_add(ref,index,updates,name=None)
paddle.fluid.layers.nn.selu(x,scale=None,alpha=None,name=None)
paddle.fluid.layers.nn.shape(input)
paddle.fluid.layers.nn.shard_index(input,index_num,nshards,shard_id,ignore_value=-1)
paddle.fluid.layers.nn.shuffle_channel(x,group,name=None)
paddle.fluid.layers.nn.sign(x)
paddle.fluid.layers.nn.similarity_focus(input,axis,indexes,name=None)
paddle.fluid.layers.nn.size(input)
paddle.fluid.layers.nn.slice(input,axes,starts,ends)
paddle.fluid.layers.nn.smooth_l1(x,y,inside_weight=None,outside_weight=None,sigma=None)
paddle.fluid.layers.nn.soft_relu(x,threshold=40.0,name=None)
paddle.fluid.layers.nn.softmax(input,use_cudnn=True,name=None,axis=-1)
paddle.fluid.layers.nn.space_to_depth(x,blocksize,name=None)
paddle.fluid.layers.nn.split(input,num_or_sections,dim=-1,name=None)
paddle.fluid.layers.nn.squeeze(input,axes,name=None)
paddle.fluid.layers.nn.stack(x,axis=0,name=None)
paddle.fluid.layers.nn.stanh(x,scale_a=0.67,scale_b=1.7159,name=None)
paddle.fluid.layers.nn.strided_slice(input,axes,starts,ends,strides)
paddle.fluid.layers.nn.sum(x)
paddle.fluid.layers.nn.swish(x,beta=1.0,name=None)
paddle.fluid.layers.nn.temporal_shift(x,seg_num,shift_ratio=0.25,name=None,data_format='NCHW')
paddle.fluid.layers.nn.topk(input,k,name=None)
paddle.fluid.layers.nn.transpose(x,perm,name=None)
paddle.fluid.layers.nn.unbind(input,axis=0)
paddle.fluid.layers.nn.unfold(x,kernel_sizes,strides=1,paddings=0,dilations=1,name=None)
paddle.fluid.layers.nn.uniform_random(shape,dtype='float32',min=-1.0,max=1.0,seed=0,name=None)
paddle.fluid.layers.nn.uniform_random_batch_size_like(input,shape,dtype='float32',input_dim_idx=0,output_dim_idx=0,min=-1.0,max=1.0,seed=0)
paddle.fluid.layers.nn.unique(x,dtype='int32')
paddle.fluid.layers.nn.unique_with_counts(x,dtype='int32')
paddle.fluid.layers.nn.unsqueeze(input,axes,name=None)
paddle.fluid.layers.nn.unstack(x,axis=0,num=None)
paddle.fluid.layers.nn.where(condition)
paddle.fluid.layers.ops.cumsum(x,axis=None,exclusive=None,reverse=None)
paddle.fluid.layers.ops.erf(x,name=None)
paddle.fluid.layers.ops.gelu(x,approximate=False)
paddle.fluid.layers.ops.hard_shrink(x,threshold=None)
paddle.fluid.layers.ops.lgamma(x,name=None)
paddle.fluid.layers.ops.softplus(x,beta:float=1.0,threshold:float=20.0,name=None)
paddle.fluid.layers.ops.softshrink(x,alpha=None)
paddle.fluid.layers.ops.thresholded_relu(x,threshold=None)
paddle.fluid.layers.rnn(cell,inputs,initial_states=None,sequence_length=None,time_major=False,is_reverse=False,**kwargs)
paddle.fluid.layers.RNNCell()
paddle.fluid.layers.SampleEmbeddingHelper(embedding_fn,start_tokens,end_token,softmax_temperature=None,seed=None)
paddle.fluid.layers.sequence_lod.sequence_mask(x,maxlen=None,dtype='int64',name=None)
paddle.fluid.layers.tensor.argmax(x,axis=0)
paddle.fluid.layers.tensor.argmin(x,axis=0)
paddle.fluid.layers.tensor.argsort(input,axis=-1,descending=False,name=None)
paddle.fluid.layers.tensor.assign(input,output=None)
paddle.fluid.layers.tensor.cast(x,dtype)
paddle.fluid.layers.tensor.concat(input,axis=0,name=None)
paddle.fluid.layers.tensor.create_tensor(dtype,name=None,persistable=False)
paddle.fluid.layers.tensor.diag(diagonal)
paddle.fluid.layers.tensor.eye(num_rows,num_columns=None,batch_shape=None,dtype='float32',name=None)
paddle.fluid.layers.tensor.fill_constant(shape,dtype,value,force_cpu=False,out=None,name=None)
paddle.fluid.layers.tensor.fill_constant_batch_size_like(input,shape,dtype,value,input_dim_idx=0,output_dim_idx=0,force_cpu=False)
paddle.fluid.layers.tensor.has_inf(x)
paddle.fluid.layers.tensor.has_nan(x)
paddle.fluid.layers.tensor.isfinite(x)
paddle.fluid.layers.tensor.linspace(start,stop,num,dtype=None,name=None)
paddle.fluid.layers.tensor.ones(shape,dtype,force_cpu=False)
paddle.fluid.layers.tensor.ones_like(x,out=None)
paddle.fluid.layers.tensor.range(start,end,step,dtype,name=None)
paddle.fluid.layers.tensor.reverse(x,axis)
paddle.fluid.layers.tensor.sums(input,out=None)
paddle.fluid.layers.tensor.tensor_array_to_tensor(input,axis=1,name=None,use_stack=False)
paddle.fluid.layers.tensor.triu(input,diagonal=0,name=None)
paddle.fluid.layers.tensor.zeros(shape,dtype,force_cpu=False,name=None)
paddle.fluid.layers.tensor.zeros_like(x,out=None)
paddle.fluid.layers.TrainingHelper(inputs,sequence_length,time_major=False)
paddle.fluid.libpaddle.IPUPlace()
paddle.fluid.libpaddle.LoDTensor()
paddle.fluid.libpaddle.LoDTensorArray()
paddle.fluid.libpaddle.MLUPlace()
paddle.fluid.libpaddle.XPUPlace()
paddle.fluid.lod_tensor.create_lod_tensor(data,recursive_seq_lens,place)
paddle.fluid.lod_tensor.create_random_int_lodtensor(recursive_seq_lens,base_shape,place,low,high)
paddle.fluid.log_helper.get_logger(name,level,fmt=None)
paddle.fluid.metrics.Accuracy(name=None)
paddle.fluid.metrics.Auc(name,curve='ROC',num_thresholds=4095)
paddle.fluid.metrics.ChunkEvaluator(name=None)
paddle.fluid.metrics.CompositeMetric(name=None)
paddle.fluid.metrics.DetectionMAP(input,gt_label,gt_box,gt_difficult=None,class_num=None,background_label=0,overlap_threshold=0.5,evaluate_difficult=True,ap_version='integral')
paddle.fluid.metrics.EditDistance(name)
paddle.fluid.metrics.MetricBase(name)
paddle.fluid.metrics.Precision(name=None)
paddle.fluid.metrics.Recall(name=None)
paddle.fluid.nets.glu(input,dim=-1)
paddle.fluid.nets.img_conv_group(input,conv_num_filter,pool_size,conv_padding=1,conv_filter_size=3,conv_act=None,param_attr=None,conv_with_batchnorm=False,conv_batchnorm_drop_rate=0.0,pool_stride=1,pool_type='max',use_cudnn=True)
paddle.fluid.nets.scaled_dot_product_attention(queries,keys,values,num_heads=1,dropout_rate=0.0)
paddle.fluid.nets.sequence_conv_pool(input,num_filters,filter_size,param_attr=None,act='sigmoid',pool_type='max',bias_attr=None)
paddle.fluid.nets.simple_img_conv_pool(input,num_filters,filter_size,pool_size,pool_stride,pool_padding=0,pool_type='max',global_pooling=False,conv_stride=1,conv_padding=0,conv_dilation=1,conv_groups=1,param_attr=None,bias_attr=None,act=None,use_cudnn=True)
paddle.fluid.optimizer.AdadeltaOptimizer(learning_rate,epsilon=1e-06,rho=0.95,parameter_list=None,regularization=None,grad_clip=None,name=None)
paddle.fluid.optimizer.AdagradOptimizer(learning_rate,epsilon=1e-06,parameter_list=None,regularization=None,grad_clip=None,name=None,initial_accumulator_value=0.0)
paddle.fluid.optimizer.AdamaxOptimizer(learning_rate=0.001,beta1=0.9,beta2=0.999,epsilon=1e-08,parameter_list=None,regularization=None,grad_clip=None,name=None)
paddle.fluid.optimizer.AdamOptimizer(learning_rate=0.001,beta1=0.9,beta2=0.999,epsilon=1e-08,parameter_list=None,regularization=None,grad_clip=None,name=None,lazy_mode=False,use_global_beta_pow=False,flatten_param_grads=False,align_size=-1)
paddle.fluid.optimizer.DecayedAdagradOptimizer(learning_rate,decay=0.95,epsilon=1e-06,parameter_list=None,regularization=None,grad_clip=None,name=None)
paddle.fluid.optimizer.DpsgdOptimizer(learning_rate=0.001,clip=0.9,batch_size=0.999,sigma=1e-08,parameter_list=None)
paddle.fluid.optimizer.FtrlOptimizer(learning_rate,l1=0.0,l2=0.0,lr_power=-0.5,parameter_list=None,regularization=None,grad_clip=None,name=None)
paddle.fluid.optimizer.LambOptimizer(learning_rate=0.001,lamb_weight_decay=0.01,beta1=0.9,beta2=0.999,epsilon=1e-06,parameter_list=None,regularization=None,grad_clip=None,exclude_from_weight_decay_fn=None,name=None)
paddle.fluid.optimizer.LarsMomentumOptimizer(learning_rate,momentum,lars_coeff=0.001,lars_weight_decay=0.0005,parameter_list=None,regularization=None,grad_clip=None,name=None,exclude_from_weight_decay=None,epsilon=0,multi_precision=False,rescale_grad=1.0)
paddle.fluid.optimizer.LookaheadOptimizer(inner_optimizer,alpha=0.5,k=5)
paddle.fluid.optimizer.ModelAverage(average_window_rate,min_average_window=10000,max_average_window=10000,regularization=None,name=None)
paddle.fluid.optimizer.MomentumOptimizer(learning_rate,momentum,parameter_list=None,use_nesterov=False,regularization=None,grad_clip=None,name=None)
paddle.fluid.optimizer.PipelineOptimizer(optimizer,num_microbatches=1,start_cpu_core_id=0)
paddle.fluid.optimizer.RecomputeOptimizer(optimizer)
paddle.fluid.optimizer.RMSPropOptimizer(learning_rate,rho=0.95,epsilon=1e-06,momentum=0.0,centered=False,parameter_list=None,regularization=None,grad_clip=None,name=None)
paddle.fluid.optimizer.SGDOptimizer(learning_rate,parameter_list=None,regularization=None,grad_clip=None,multi_precision=False,name=None)
paddle.fluid.reader.PyReader(feed_list=None,capacity=None,use_double_buffer=True,iterable=True,return_list=False)
paddle.fluid.regularizer.L1DecayRegularizer(regularization_coeff=0.0)
paddle.fluid.regularizer.L2DecayRegularizer(regularization_coeff=0.0)
paddle.fluid.trainer_desc.DistMultiTrainer()
paddle.fluid.trainer_desc.HeterPipelineTrainer()
paddle.fluid.trainer_desc.HeterXpuTrainer()
paddle.fluid.trainer_desc.MultiTrainer()
paddle.fluid.trainer_desc.PipelineTrainer()
paddle.fluid.trainer_desc.TrainerDesc()
paddle.fluid.trainer_factory.FetchHandlerMonitor(scope,handler)
paddle.fluid.trainer_factory.TrainerFactory()
paddle.fluid.transpiler.collective.GradAllReduce(nrings=2)
paddle.fluid.transpiler.collective.LocalSGD(nrings=2)
paddle.fluid.transpiler.collective.MultiThread(nrings=1,trans_mode='all_reduce')
paddle.fluid.transpiler.distribute_transpiler.DistributeTranspiler(config=None)
paddle.fluid.transpiler.distribute_transpiler.DistributeTranspilerConfig
paddle.fluid.transpiler.memory_optimization_transpiler.memory_optimize(input_program,skip_opt_set=None,print_log=False,level=0,skip_grads=True)
paddle.fluid.transpiler.memory_optimization_transpiler.release_memory(input_program,skip_opt_set=None)
paddle.fluid.transpiler.ps_dispatcher.HashName(pserver_endpoints)
paddle.fluid.transpiler.ps_dispatcher.RoundRobin(pserver_endpoints)
paddle.fluid.wrapped_decorator.signature_safe_contextmanager(func,*args,**kwargs)
paddle.fluid.wrapped_decorator.wrap_decorator(decorator_func)
paddle.geometric.reindex_graph(x,neighbors,count,value_buffer=None,index_buffer=None,name=None)
paddle.geometric.reindex_heter_graph(x,neighbors,count,value_buffer=None,index_buffer=None,name=None)
paddle.geometric.sample_neighbors(row,colptr,input_nodes,sample_size=-1,eids=None,return_eids=False,perm_buffer=None,name=None)
paddle.geometric.segment_max(data,segment_ids,name=None)
paddle.geometric.segment_mean(data,segment_ids,name=None)
paddle.geometric.segment_min(data,segment_ids,name=None)
paddle.geometric.segment_sum(data,segment_ids,name=None)
paddle.geometric.send_u_recv(x,src_index,dst_index,reduce_op='sum',out_size=None,name=None)
paddle.geometric.send_ue_recv(x,y,src_index,dst_index,message_op='add',reduce_op='sum',out_size=None,name=None)
paddle.geometric.send_uv(x,y,src_index,dst_index,message_op='add',name=None)
paddle.hub.help(repo_dir,model,source='github',force_reload=False)
paddle.hub.list(repo_dir,source='github',force_reload=False)
paddle.hub.load(repo_dir,model,source='github',force_reload=False,**kwargs)
paddle.incubate.asp.calculate_density(x)
paddle.incubate.asp.decorate(optimizer)
paddle.incubate.asp.prune_model(model,n=2,m=4,mask_algo='mask_1d',with_mask=True)
paddle.incubate.asp.reset_excluded_layers(main_program=None)
paddle.incubate.asp.set_excluded_layers(param_names,main_program=None)
paddle.incubate.autograd.disable_prim()
paddle.incubate.autograd.enable_prim()
paddle.incubate.autograd.forward_grad(outputs,inputs,grad_inputs=None)
paddle.incubate.autograd.grad(outputs,inputs,grad_outputs=None)
paddle.incubate.autograd.Hessian(func,xs,is_batched=False)
paddle.incubate.autograd.Jacobian(func,xs,is_batched=False)
paddle.incubate.autograd.jvp(func,xs,v=None)
paddle.incubate.autograd.vjp(func,xs,v=None)
paddle.incubate.autotune.set_config(config=None)
paddle.incubate.graph_khop_sampler(row,colptr,input_nodes,sample_sizes,sorted_eids=None,return_eids=False,name=None)
paddle.incubate.graph_reindex(x,neighbors,count,value_buffer=None,index_buffer=None,flag_buffer_hashtable=False,name=None)
paddle.incubate.graph_sample_neighbors(row,colptr,input_nodes,eids=None,perm_buffer=None,sample_size=-1,return_eids=False,flag_perm_buffer=False,name=None)
paddle.incubate.graph_send_recv(x,src_index,dst_index,pool_type='sum',out_size=None,name=None)
paddle.incubate.identity_loss(x,reduction='none')
paddle.incubate.LookAhead(inner_optimizer,alpha=0.5,k=5,name=None)
paddle.incubate.ModelAverage(average_window_rate,parameters=None,min_average_window=10000,max_average_window=10000,name=None)
paddle.incubate.nn.functional.fused_bias_dropout_residual_layer_norm(x,residual,bias=None,ln_scale=None,ln_bias=None,dropout_rate=0.5,ln_epsilon=1e-05,training=True,mode='upscale_in_train',name=None)
paddle.incubate.nn.functional.fused_feedforward(x,linear1_weight,linear2_weight,linear1_bias=None,linear2_bias=None,ln1_scale=None,ln1_bias=None,ln2_scale=None,ln2_bias=None,dropout1_rate=0.5,dropout2_rate=0.5,activation='relu',ln1_epsilon=1e-05,ln2_epsilon=1e-05,pre_layer_norm=False,training=True,mode='upscale_in_train',ring_id=-1,add_residual=True,name=None)
paddle.incubate.nn.functional.fused_linear(x,weight,bias=None,transpose_weight=False,name=None)
paddle.incubate.nn.functional.fused_matmul_bias(x,y,bias=None,transpose_x=False,transpose_y=False,name=None)
paddle.incubate.nn.functional.fused_multi_head_attention(x,qkv_weight,linear_weight,pre_layer_norm=False,pre_ln_scale=None,pre_ln_bias=None,ln_scale=None,ln_bias=None,pre_ln_epsilon=1e-05,qkv_bias=None,linear_bias=None,cache_kv=None,attn_mask=None,dropout_rate=0.5,attn_dropout_rate=0.5,ln_epsilon=1e-05,training=True,mode='upscale_in_train',ring_id=-1,add_residual=True,name=None)
paddle.incubate.nn.functional.fused_multi_transformer(x,ln_scales,ln_biases,qkv_weights,qkv_biases,linear_weights,linear_biases,ffn_ln_scales,ffn_ln_biases,ffn1_weights,ffn1_biases,ffn2_weights,ffn2_biases,pre_layer_norm=True,epsilon=1e-05,cache_kvs=None,time_step=None,attn_mask=None,dropout_rate=0.0,activation='gelu',training=False,mode='upscale_in_train',trans_qkvw=True,ring_id=-1,name=None)
paddle.incubate.nn.FusedBiasDropoutResidualLayerNorm(embed_dim,dropout_rate=0.5,weight_attr=None,bias_attr=None,epsilon=1e-05,name=None)
paddle.incubate.nn.FusedFeedForward(d_model,dim_feedforward,dropout_rate=0.1,epsilon=1e-05,activation='relu',act_dropout_rate=None,normalize_before=False,linear1_weight_attr=None,linear1_bias_attr=None,linear2_weight_attr=None,linear2_bias_attr=None,ln1_scale_attr=None,ln1_bias_attr=None,ln2_scale_attr=None,ln2_bias_attr=None,nranks=1,ring_id=-1,name=None)
paddle.incubate.nn.FusedLinear(in_features,out_features,weight_attr=None,bias_attr=None,transpose_weight=False,name=None)
paddle.incubate.nn.FusedMultiHeadAttention(embed_dim,num_heads,dropout_rate=0.5,attn_dropout_rate=0.5,kdim=None,vdim=None,normalize_before=False,need_weights=False,qkv_weight_attr=None,qkv_bias_attr=None,linear_weight_attr=None,linear_bias_attr=None,pre_ln_scale_attr=None,pre_ln_bias_attr=None,ln_scale_attr=None,ln_bias_attr=None,epsilon=1e-05,nranks=1,ring_id=-1,name=None)
paddle.incubate.nn.FusedMultiTransformer(embed_dim,num_heads,dim_feedforward,dropout_rate=0.0,activation='gelu',normalize_before=True,ln_scale_attrs=None,ln_bias_attrs=None,qkv_weight_attrs=None,qkv_bias_attrs=None,linear_weight_attrs=None,linear_bias_attrs=None,ffn_ln_scale_attrs=None,ffn_ln_bias_attrs=None,ffn1_weight_attrs=None,ffn1_bias_attrs=None,ffn2_weight_attrs=None,ffn2_bias_attrs=None,epsilon=1e-05,num_layers=-1,nranks=1,trans_qkvw=True,ring_id=-1,name=None)
paddle.incubate.nn.FusedTransformerEncoderLayer(d_model,nhead,dim_feedforward,dropout_rate=0.1,activation='relu',attn_dropout_rate=None,act_dropout_rate=None,normalize_before=False,weight_attr=None,bias_attr=None)
paddle.incubate.optimizer.functional.minimize_bfgs(objective_func,initial_position,max_iters=50,tolerance_grad=1e-07,tolerance_change=1e-09,initial_inverse_hessian_estimate=None,line_search_fn='strong_wolfe',max_line_search_iters=50,initial_step_length=1.0,dtype='float32',name=None)
paddle.incubate.optimizer.functional.minimize_lbfgs(objective_func,initial_position,history_size=100,max_iters=50,tolerance_grad=1e-08,tolerance_change=1e-08,initial_inverse_hessian_estimate=None,line_search_fn='strong_wolfe',max_line_search_iters=50,initial_step_length=1.0,dtype='float32',name=None)
paddle.incubate.segment_max(data,segment_ids,name=None)
paddle.incubate.segment_mean(data,segment_ids,name=None)
paddle.incubate.segment_min(data,segment_ids,name=None)
paddle.incubate.segment_sum(data,segment_ids,name=None)
paddle.incubate.softmax_mask_fuse(x,mask,name=None)
paddle.incubate.softmax_mask_fuse_upper_triangle(x)
paddle.incubate.xpu.resnet_block.resnet_basic_block(x,filter1,scale1,bias1,mean1,var1,filter2,scale2,bias2,mean2,var2,filter3,scale3,bias3,mean3,var3,stride1,stride2,stride3,padding1,padding2,padding3,dilation1,dilation2,dilation3,groups,momentum,eps,data_format,has_shortcut,use_global_stats=None,training=False,trainable_statistics=False,find_conv_max=True)
paddle.incubate.xpu.resnet_block.ResNetBasicBlock(num_channels1,num_filter1,filter1_size,num_channels2,num_filter2,filter2_size,num_channels3,num_filter3,filter3_size,stride1=1,stride2=1,stride3=1,act='relu',momentum=0.9,eps=1e-05,data_format='NCHW',has_shortcut=False,use_global_stats=False,is_test=False,filter1_attr=None,scale1_attr=None,bias1_attr=None,moving_mean1_name=None,moving_var1_name=None,filter2_attr=None,scale2_attr=None,bias2_attr=None,moving_mean2_name=None,moving_var2_name=None,filter3_attr=None,scale3_attr=None,bias3_attr=None,moving_mean3_name=None,moving_var3_name=None,padding1=0,padding2=0,padding3=0,dilation1=1,dilation2=1,dilation3=1,trainable_statistics=False,find_conv_max=True)
paddle.inference.Confid()
paddle.inference.convert_to_mixed_precision(model_file:str,params_file:str,mixed_model_file:str,mixed_params_file:str,mixed_precision:paddle.fluid.libpaddle.AnalysisConfig.Precision,backend:paddle.fluid.libpaddle.PaddlePlace,keep_io_types:bool=True,black_list:Set={})
paddle.inference.DataType()
paddle.inference.PlaceType()
paddle.inference.PrecisionType()
paddle.inference.Predictor()
paddle.inference.PredictorPool()
paddle.inference.Tensor()
paddle.io.BatchSampler(dataset=None,sampler=None,shuffle=False,batch_size=1,drop_last=False)
paddle.io.ChainDataset(datasets)
paddle.io.ComposeDataset(datasets)
paddle.io.DataLoader(dataset,feed_list=None,places=None,return_list=True,batch_sampler=None,batch_size=1,shuffle=False,drop_last=False,collate_fn=None,num_workers=0,use_buffer_reader=True,prefetch_factor=2,use_shared_memory=True,timeout=0,worker_init_fn=None,persistent_workers=False)
paddle.io.Dataset()
paddle.io.DistributedBatchSampler(dataset,batch_size,num_replicas=None,rank=None,shuffle=False,drop_last=False)
paddle.io.get_worker_info()
paddle.io.IterableDataset()
paddle.io.random_split(dataset,lengths,generator=None)
paddle.io.RandomSampler(data_source,replacement=False,num_samples=None,generator=None)
paddle.io.Sampler(data_source=None)
paddle.io.SequenceSampler(data_source)
paddle.io.Subset(dataset,indices)
paddle.io.TensorDataset(tensors)
paddle.io.WeightedRandomSampler(weights,num_samples,replacement=True)
paddle.jit.load(path,**configs)
paddle.jit.not_to_static(func=None)
paddle.jit.ProgramTranslator(**kwargs)
paddle.jit.save(layer,path,input_spec=None,**configs)
paddle.jit.set_code_level(level=100,also_to_stdout=False)
paddle.jit.set_verbosity(level=0,also_to_stdout=False)
paddle.jit.to_static(function=None,input_spec=None,build_strategy=None,property=False)
paddle.jit.TracedLayer(program,parameters,feed_names,fetch_names)
paddle.jit.TranslatedLayer(programs,persistable_vars)
paddle.linalg.cholesky(x,upper=False,name=None)
paddle.linalg.cholesky_solve(x,y,upper=False,name=None)
paddle.linalg.cond(x,p=None,name=None)
paddle.linalg.corrcoef(x,rowvar=True,name=None)
paddle.linalg.cov(x,rowvar=True,ddof=True,fweights=None,aweights=None,name=None)
paddle.linalg.det(x,name=None)
paddle.linalg.eig(x,name=None)
paddle.linalg.eigh(x,UPLO='L',name=None)
paddle.linalg.eigvals(x,name=None)
paddle.linalg.eigvalsh(x,UPLO='L',name=None)
paddle.linalg.inv(x,name=None)
paddle.linalg.lstsq(x,y,rcond=None,driver=None,name=None)
paddle.linalg.lu(x,pivot=True,get_infos=False,name=None)
paddle.linalg.lu_unpack(x,y,unpack_ludata=True,unpack_pivots=True,name=None)
paddle.linalg.matrix_power(x,n,name=None)
paddle.linalg.matrix_rank(x,tol=None,hermitian=False,name=None)
paddle.linalg.multi_dot(x,name=None)
paddle.linalg.norm(x,p='fro',axis=None,keepdim=False,name=None)
paddle.linalg.pinv(x,rcond=1e-15,hermitian=False,name=None)
paddle.linalg.qr(x,mode='reduced',name=None)
paddle.linalg.slogdet(x,name=None)
paddle.linalg.solve(x,y,name=None)
paddle.linalg.svd(x,full_matrices=False,name=None)
paddle.linalg.triangular_solve(x,y,upper=True,transpose=False,unitriangular=False,name=None)
paddle.metric.Accuracy(topk=(1,),name=None,*args,**kwargs)
paddle.metric.accuracy(input,label,k=1,correct=None,total=None,name=None)
paddle.metric.Auc(curve='ROC',num_thresholds=4095,name='auc',*args,**kwargs)
paddle.metric.Metric()
paddle.metric.Precision(name='precision',*args,**kwargs)
paddle.metric.Recall(name='recall',*args,**kwargs)
paddle.nn.AdaptiveAvgPool1D(output_size,name=None)
paddle.nn.AdaptiveAvgPool2D(output_size,data_format='NCHW',name=None)
paddle.nn.AdaptiveAvgPool3D(output_size,data_format='NCDHW',name=None)
paddle.nn.AdaptiveMaxPool1D(output_size,return_mask=False,name=None)
paddle.nn.AdaptiveMaxPool2D(output_size,return_mask=False,name=None)
paddle.nn.AdaptiveMaxPool3D(output_size,return_mask=False,name=None)
paddle.nn.AlphaDropout(p=0.5,name=None)
paddle.nn.AvgPool1D(kernel_size,stride=None,padding=0,exclusive=True,ceil_mode=False,name=None)
paddle.nn.AvgPool2D(kernel_size,stride=None,padding=0,ceil_mode=False,exclusive=True,divisor_override=None,data_format='NCHW',name=None)
paddle.nn.AvgPool3D(kernel_size,stride=None,padding=0,ceil_mode=False,exclusive=True,divisor_override=None,data_format='NCDHW',name=None)
paddle.nn.BatchNorm(num_channels,act=None,is_test=False,momentum=0.9,epsilon=1e-05,param_attr=None,bias_attr=None,dtype='float32',data_layout='NCHW',in_place=False,moving_mean_name=None,moving_variance_name=None,do_model_average_for_mean_and_var=True,use_global_stats=False,trainable_statistics=False)
paddle.nn.BatchNorm1D(num_features,momentum=0.9,epsilon=1e-05,weight_attr=None,bias_attr=None,data_format='NCL',use_global_stats=None,name=None)
paddle.nn.BatchNorm2D(num_features,momentum=0.9,epsilon=1e-05,weight_attr=None,bias_attr=None,data_format='NCHW',use_global_stats=None,name=None)
paddle.nn.BatchNorm3D(num_features,momentum=0.9,epsilon=1e-05,weight_attr=None,bias_attr=None,data_format='NCDHW',use_global_stats=None,name=None)
paddle.nn.BCELoss(weight=None,reduction='mean',name=None)
paddle.nn.BCEWithLogitsLoss(weight=None,reduction='mean',pos_weight=None,name=None)
paddle.nn.BeamSearchDecoder(cell,start_token,end_token,beam_size,embedding_fn=None,output_fn=None)
paddle.nn.Bilinear(in1_features,in2_features,out_features,weight_attr=None,bias_attr=None,name=None)
paddle.nn.BiRNN(cell_fw,cell_bw,time_major=False)
paddle.nn.CELU(alpha=1.0,name=None)
paddle.nn.ChannelShuffle(groups,data_format='NCHW',name=None)
paddle.nn.ClipGradByGlobalNorm(clip_norm,group_name='default_group',auto_skip_clip=False)
paddle.nn.ClipGradByNorm(clip_norm)
paddle.nn.ClipGradByValue(max,min=None)
paddle.nn.Conv1D(in_channels,out_channels,kernel_size,stride=1,padding=0,dilation=1,groups=1,padding_mode='zeros',weight_attr=None,bias_attr=None,data_format='NCL')
paddle.nn.Conv1DTranspose(in_channels,out_channels,kernel_size,stride=1,padding=0,output_padding=0,groups=1,dilation=1,weight_attr=None,bias_attr=None,data_format='NCL')
paddle.nn.Conv2D(in_channels,out_channels,kernel_size,stride=1,padding=0,dilation=1,groups=1,padding_mode='zeros',weight_attr=None,bias_attr=None,data_format='NCHW')
paddle.nn.Conv2DTranspose(in_channels,out_channels,kernel_size,stride=1,padding=0,output_padding=0,dilation=1,groups=1,weight_attr=None,bias_attr=None,data_format='NCHW')
paddle.nn.Conv3D(in_channels,out_channels,kernel_size,stride=1,padding=0,dilation=1,groups=1,padding_mode='zeros',weight_attr=None,bias_attr=None,data_format='NCDHW')
paddle.nn.Conv3DTranspose(in_channels,out_channels,kernel_size,stride=1,padding=0,output_padding=0,dilation=1,groups=1,weight_attr=None,bias_attr=None,data_format='NCDHW')
paddle.nn.CosineEmbeddingLoss(margin=0,reduction='mean',name=None)
paddle.nn.CosineSimilarity(axis=1,eps=1e-08)
paddle.nn.CrossEntropyLoss(weight=None,ignore_index=-100,reduction='mean',soft_label=False,axis=-1,use_softmax=True,name=None)
paddle.nn.CTCLoss(blank=0,reduction='mean')
paddle.nn.Dropout(p=0.5,axis=None,mode='upscale_in_train',name=None)
paddle.nn.Dropout2D(p=0.5,data_format='NCHW',name=None)
paddle.nn.Dropout3D(p=0.5,data_format='NCDHW',name=None)
paddle.nn.dynamic_decode(decoder,inits=None,max_step_num=None,output_time_major=False,impute_finished=False,is_test=False,return_length=False,**kwargs)
paddle.nn.ELU(alpha=1.0,name=None)
paddle.nn.Embedding(num_embeddings,embedding_dim,padding_idx=None,sparse=False,weight_attr=None,name=None)
paddle.nn.Flatten(start_axis=1,stop_axis=-1)
paddle.nn.Fold(output_sizes,kernel_sizes,dilations=1,paddings=0,strides=1,name=None)
paddle.nn.functional.adaptive_avg_pool1d(x,output_size,name=None)
paddle.nn.functional.adaptive_avg_pool2d(x,output_size,data_format='NCHW',name=None)
paddle.nn.functional.adaptive_avg_pool3d(x,output_size,data_format='NCDHW',name=None)
paddle.nn.functional.adaptive_max_pool1d(x,output_size,return_mask=False,name=None)
paddle.nn.functional.adaptive_max_pool2d(x,output_size,return_mask=False,name=None)
paddle.nn.functional.adaptive_max_pool3d(x,output_size,return_mask=False,name=None)
paddle.nn.functional.affine_grid(theta,out_shape,align_corners=True,name=None)
paddle.nn.functional.alpha_dropout(x,p=0.5,training=True,name=None)
paddle.nn.functional.avg_pool1d(x,kernel_size,stride=None,padding=0,exclusive=True,ceil_mode=False,name=None)
paddle.nn.functional.avg_pool2d(x,kernel_size,stride=None,padding=0,ceil_mode=False,exclusive=True,divisor_override=None,data_format='NCHW',name=None)
paddle.nn.functional.avg_pool3d(x,kernel_size,stride=None,padding=0,ceil_mode=False,exclusive=True,divisor_override=None,data_format='NCDHW',name=None)
paddle.nn.functional.batch_norm(x,running_mean,running_var,weight,bias,training=False,momentum=0.9,epsilon=1e-05,data_format='NCHW',use_global_stats=None,name=None)
paddle.nn.functional.bilinear(x1,x2,weight,bias=None,name=None)
paddle.nn.functional.binary_cross_entropy(input,label,weight=None,reduction='mean',name=None)
paddle.nn.functional.binary_cross_entropy_with_logits(logit,label,weight=None,reduction='mean',pos_weight=None,name=None)
paddle.nn.functional.celu(x,alpha=1.0,name=None)
paddle.nn.functional.channel_shuffle(x,groups,data_format='NCHW',name=None)
paddle.nn.functional.class_center_sample(label,num_classes,num_samples,group=None)
paddle.nn.functional.conv1d(x,weight,bias=None,stride=1,padding=0,dilation=1,groups=1,data_format='NCL',name=None)
paddle.nn.functional.conv1d_transpose(x,weight,bias=None,stride=1,padding=0,output_padding=0,groups=1,dilation=1,output_size=None,data_format='NCL',name=None)
paddle.nn.functional.conv2d(x,weight,bias=None,stride=1,padding=0,dilation=1,groups=1,data_format='NCHW',name=None)
paddle.nn.functional.conv2d_transpose(x,weight,bias=None,stride=1,padding=0,output_padding=0,dilation=1,groups=1,output_size=None,data_format='NCHW',name=None)
paddle.nn.functional.conv3d(x,weight,bias=None,stride=1,padding=0,dilation=1,groups=1,data_format='NCDHW',name=None)
paddle.nn.functional.conv3d_transpose(x,weight,bias=None,stride=1,padding=0,output_padding=0,groups=1,dilation=1,output_size=None,data_format='NCDHW',name=None)
paddle.nn.functional.cosine_embedding_loss(input1,input2,label,margin=0,reduction='mean',name=None)
paddle.nn.functional.cosine_similarity(x1,x2,axis=1,eps=1e-08)
paddle.nn.functional.cross_entropy(input,label,weight=None,ignore_index=-100,reduction='mean',soft_label=False,axis=-1,use_softmax=True,name=None)
paddle.nn.functional.ctc_loss(log_probs,labels,input_lengths,label_lengths,blank=0,reduction='mean',norm_by_times=False)
paddle.nn.functional.diag_embed(input,offset=0,dim1=-2,dim2=-1)
paddle.nn.functional.dice_loss(input,label,epsilon=1e-05,name=None)
paddle.nn.functional.dropout(x,p=0.5,axis=None,training=True,mode='upscale_in_train',name=None)
paddle.nn.functional.dropout2d(x,p=0.5,training=True,data_format='NCHW',name=None)
paddle.nn.functional.dropout3d(x,p=0.5,training=True,data_format='NCDHW',name=None)
paddle.nn.functional.elu(x,alpha=1.0,name=None)
paddle.nn.functional.elu_(x,alpha=1.0,name=None)
paddle.nn.functional.embedding(x,weight,padding_idx=None,sparse=False,name=None)
paddle.nn.functional.fold(x,output_sizes,kernel_sizes,strides=1,paddings=0,dilations=1,name=None)
paddle.nn.functional.gather_tree(ids,parents)
paddle.nn.functional.gelu(x,approximate=False,name=None)
paddle.nn.functional.glu(x,axis=-1,name=None)
paddle.nn.functional.grid_sample(x,grid,mode='bilinear',padding_mode='zeros',align_corners=True,name=None)
paddle.nn.functional.gumbel_softmax(x,temperature=1.0,hard=False,axis=-1,name=None)
paddle.nn.functional.hardshrink(x,threshold=0.5,name=None)
paddle.nn.functional.hardsigmoid(x,slope=0.1666667,offset=0.5,name=None)
paddle.nn.functional.hardswish(x,name=None)
paddle.nn.functional.hardtanh(x,min=-1.0,max=1.0,name=None)
paddle.nn.functional.hinge_embedding_loss(input,label,margin=1.0,reduction='mean',name=None)
paddle.nn.functional.hsigmoid_loss(input,label,num_classes,weight,bias=None,path_table=None,path_code=None,is_sparse=False,name=None)
paddle.nn.functional.instance_norm(x,running_mean=None,running_var=None,weight=None,bias=None,use_input_stats=True,momentum=0.9,eps=1e-05,data_format='NCHW',name=None)
paddle.nn.functional.interpolate(x,size=None,scale_factor=None,mode='nearest',align_corners=False,align_mode=0,data_format='NCHW',name=None)
paddle.nn.functional.kl_div(input,label,reduction='mean',name=None)
paddle.nn.functional.l1_loss(input,label,reduction='mean',name=None)
paddle.nn.functional.label_smooth(label,prior_dist=None,epsilon=0.1,name=None)
paddle.nn.functional.layer_norm(x,normalized_shape,weight=None,bias=None,epsilon=1e-05,name=None)
paddle.nn.functional.leaky_relu(x,negative_slope=0.01,name=None)
paddle.nn.functional.linear(x,weight,bias=None,name=None)
paddle.nn.functional.local_response_norm(x,size,alpha=0.0001,beta=0.75,k=1.0,data_format='NCHW',name=None)
paddle.nn.functional.log_loss(input,label,epsilon=0.0001,name=None)
paddle.nn.functional.log_sigmoid(x,name=None)
paddle.nn.functional.log_softmax(x,axis=-1,dtype=None,name=None)
paddle.nn.functional.margin_cross_entropy(logits,label,margin1=1.0,margin2=0.5,margin3=0.0,scale=64.0,group=None,return_softmax=False,reduction='mean')
paddle.nn.functional.margin_ranking_loss(input,other,label,margin=0.0,reduction='mean',name=None)
paddle.nn.functional.max_pool1d(x,kernel_size,stride=None,padding=0,return_mask=False,ceil_mode=False,name=None)
paddle.nn.functional.max_pool2d(x,kernel_size,stride=None,padding=0,return_mask=False,ceil_mode=False,data_format='NCHW',name=None)
paddle.nn.functional.max_pool3d(x,kernel_size,stride=None,padding=0,return_mask=False,ceil_mode=False,data_format='NCDHW',name=None)
paddle.nn.functional.max_unpool1d(x,indices,kernel_size,stride=None,padding=0,data_format='NCL',output_size=None,name=None)
paddle.nn.functional.max_unpool2d(x,indices,kernel_size,stride=None,padding=0,data_format='NCHW',output_size=None,name=None)
paddle.nn.functional.max_unpool3d(x,indices,kernel_size,stride=None,padding=0,data_format='NCDHW',output_size=None,name=None)
paddle.nn.functional.maxout(x,groups,axis=1,name=None)
paddle.nn.functional.mish(x,name=None)
paddle.nn.functional.mse_loss(input,label,reduction='mean',name=None)
paddle.nn.functional.multi_label_soft_margin_loss(input,label,weight=None,reduction='mean',name=None)
paddle.nn.functional.nll_loss(input,label,weight=None,ignore_index=-100,reduction='mean',name=None)
paddle.nn.functional.normalize(x,p=2,axis=1,epsilon=1e-12,name=None)
paddle.nn.functional.npair_loss(anchor,positive,labels,l2_reg=0.002)
paddle.nn.functional.one_hot(x,num_classes,name=None)
paddle.nn.functional.pad(x,pad,mode='constant',value=0,data_format='NCHW',name=None)
paddle.nn.functional.pairwise_distance(x,y,p=2.0,epsilon=1e-06,keepdim=False,name=None)
paddle.nn.functional.pixel_shuffle(x,upscale_factor,data_format='NCHW',name=None)
paddle.nn.functional.pixel_unshuffle(x,downscale_factor,data_format='NCHW',name=None)
paddle.nn.functional.prelu(x,weight,data_format='NCHW',name=None)
paddle.nn.functional.relu(x,name=None)
paddle.nn.functional.relu6(x,name=None)
paddle.nn.functional.relu_(x,name=None)
paddle.nn.functional.rrelu(x,lower=0.125,upper=0.3333333333333333,training=True,name=None)
paddle.nn.functional.selu(x,scale=1.0507009873554805,alpha=1.6732632423543772,name=None)
paddle.nn.functional.sequence_mask(x,maxlen=None,dtype='int64',name=None)
paddle.nn.functional.sigmoid(x,name=None)
paddle.nn.functional.sigmoid_focal_loss(logit,label,normalizer=None,alpha=0.25,gamma=2.0,reduction='sum',name=None)
paddle.nn.functional.silu(x,name=None)
paddle.nn.functional.smooth_l1_loss(input,label,reduction='mean',delta=1.0,name=None)
paddle.nn.functional.soft_margin_loss(input,label,reduction='mean',name=None)
paddle.nn.functional.softmax(x,axis=-1,dtype=None,name=None)
paddle.nn.functional.softmax_(x,axis=-1,dtype=None,name=None)
paddle.nn.functional.softmax_with_cross_entropy(logits,label,soft_label=False,ignore_index=-100,numeric_stable_mode=True,return_softmax=False,axis=-1)
paddle.nn.functional.softplus(x,beta=1,threshold=20,name=None)
paddle.nn.functional.softshrink(x,threshold=0.5,name=None)
paddle.nn.functional.softsign(x,name=None)
paddle.nn.functional.sparse_attention(query,key,value,sparse_csr_offset,sparse_csr_columns,key_padding_mask=None,attn_mask=None,name=None)
paddle.nn.functional.square_error_cost(input,label)
paddle.nn.functional.swish(x,name=None)
paddle.nn.functional.tanhshrink(x,name=None)
paddle.nn.functional.temporal_shift(x,seg_num,shift_ratio=0.25,name=None,data_format='NCHW')
paddle.nn.functional.thresholded_relu(x,threshold=1.0,name=None)
paddle.nn.functional.triplet_margin_loss(input,positive,negative,margin=1.0,p=2,epsilon=1e-06,swap=False,reduction='mean',name=None)
paddle.nn.functional.triplet_margin_with_distance_loss(input,positive,negative,distance_function=None,margin=1.0,swap=False,reduction='mean',name=None)
paddle.nn.functional.unfold(x,kernel_sizes,strides=1,paddings=0,dilations=1,name=None)
paddle.nn.functional.upsample(x,size=None,scale_factor=None,mode='nearest',align_corners=False,align_mode=0,data_format='NCHW',name=None)
paddle.nn.functional.zeropad2d(x,padding,data_format='NCHW',name=None)
paddle.nn.GELU(approximate=False,name=None)
paddle.nn.GroupNorm(num_groups,num_channels,epsilon=1e-05,weight_attr=None,bias_attr=None,data_format='NCHW',name=None)
paddle.nn.GRU(input_size,hidden_size,num_layers=1,direction='forward',time_major=False,dropout=0.0,weight_ih_attr=None,weight_hh_attr=None,bias_ih_attr=None,bias_hh_attr=None,name=None)
paddle.nn.GRUCell(input_size,hidden_size,weight_ih_attr=None,weight_hh_attr=None,bias_ih_attr=None,bias_hh_attr=None,name=None)
paddle.nn.Hardshrink(threshold=0.5,name=None)
paddle.nn.Hardsigmoid(name=None)
paddle.nn.Hardswish(name=None)
paddle.nn.Hardtanh(min=-1.0,max=1.0,name=None)
paddle.nn.HingeEmbeddingLoss(margin=1.0,reduction='mean',name=None)
paddle.nn.HSigmoidLoss(feature_size,num_classes,weight_attr=None,bias_attr=None,is_custom=False,is_sparse=False,name=None)
paddle.nn.Identity(*args,**kwargs)
paddle.nn.initializer.Assign(value,name=None)
paddle.nn.initializer.Bilinear()
paddle.nn.initializer.calculate_gain(nonlinearity,param=None)
paddle.nn.initializer.Constant(value=0.0)
paddle.nn.initializer.Dirac(groups=1,name=None)
paddle.nn.initializer.KaimingNormal(fan_in=None,negative_slope=0.0,nonlinearity='relu')
paddle.nn.initializer.KaimingUniform(fan_in=None,negative_slope=0.0,nonlinearity='relu')
paddle.nn.initializer.Normal(mean=0.0,std=1.0,name=None)
paddle.nn.initializer.Orthogonal(gain=1.0,name=None)
paddle.nn.initializer.set_global_initializer(weight_init,bias_init=None)
paddle.nn.initializer.TruncatedNormal(mean=0.0,std=1.0,name=None)
paddle.nn.initializer.Uniform(low=-1.0,high=1.0,name=None)
paddle.nn.initializer.XavierNormal(fan_in=None,fan_out=None,name=None)
paddle.nn.initializer.XavierUniform(fan_in=None,fan_out=None,name=None)
paddle.nn.InstanceNorm1D(num_features,epsilon=1e-05,momentum=0.9,weight_attr=None,bias_attr=None,data_format='NCHW',name=None)
paddle.nn.InstanceNorm2D(num_features,epsilon=1e-05,momentum=0.9,weight_attr=None,bias_attr=None,data_format='NCHW',name=None)
paddle.nn.InstanceNorm3D(num_features,epsilon=1e-05,momentum=0.9,weight_attr=None,bias_attr=None,data_format='NCHW',name=None)
paddle.nn.KLDivLoss(reduction='mean')
paddle.nn.L1Loss(reduction='mean',name=None)
paddle.nn.Layer(name_scope=None,dtype='float32')
paddle.nn.LayerDict(sublayers=None)
paddle.nn.LayerList(sublayers=None)
paddle.nn.LayerNorm(normalized_shape,epsilon=1e-05,weight_attr=None,bias_attr=None,name=None)
paddle.nn.LeakyReLU(negative_slope=0.01,name=None)
paddle.nn.Linear(in_features,out_features,weight_attr=None,bias_attr=None,name=None)
paddle.nn.LocalResponseNorm(size,alpha=0.0001,beta=0.75,k=1.0,data_format='NCHW',name=None)
paddle.nn.LogSigmoid(name=None)
paddle.nn.LogSoftmax(axis=-1,name=None)
paddle.nn.LSTM(input_size,hidden_size,num_layers=1,direction='forward',time_major=False,dropout=0.0,weight_ih_attr=None,weight_hh_attr=None,bias_ih_attr=None,bias_hh_attr=None,name=None)
paddle.nn.LSTMCell(input_size,hidden_size,weight_ih_attr=None,weight_hh_attr=None,bias_ih_attr=None,bias_hh_attr=None,name=None)
paddle.nn.MarginRankingLoss(margin=0.0,reduction='mean',name=None)
paddle.nn.Maxout(groups,axis=1,name=None)
paddle.nn.MaxPool1D(kernel_size,stride=None,padding=0,return_mask=False,ceil_mode=False,name=None)
paddle.nn.MaxPool2D(kernel_size,stride=None,padding=0,return_mask=False,ceil_mode=False,data_format='NCHW',name=None)
paddle.nn.MaxPool3D(kernel_size,stride=None,padding=0,return_mask=False,ceil_mode=False,data_format='NCDHW',name=None)
paddle.nn.MaxUnPool1D(kernel_size,stride=None,padding=0,data_format='NCL',output_size=None,name=None)
paddle.nn.MaxUnPool2D(kernel_size,stride=None,padding=0,data_format='NCHW',output_size=None,name=None)
paddle.nn.MaxUnPool3D(kernel_size,stride=None,padding=0,data_format='NCDHW',output_size=None,name=None)
paddle.nn.Mish(name=None)
paddle.nn.MSELoss(reduction='mean')
paddle.nn.MultiHeadAttention(embed_dim,num_heads,dropout=0.0,kdim=None,vdim=None,need_weights=False,weight_attr=None,bias_attr=None)
paddle.nn.MultiLabelSoftMarginLoss(weight=None,reduction='mean',name=None)
paddle.nn.NLLLoss(weight=None,ignore_index=-100,reduction='mean',name=None)
paddle.nn.Pad1D(padding,mode='constant',value=0.0,data_format='NCL',name=None)
paddle.nn.Pad2D(padding,mode='constant',value=0.0,data_format='NCHW',name=None)
paddle.nn.Pad3D(padding,mode='constant',value=0.0,data_format='NCDHW',name=None)
paddle.nn.PairwiseDistance(p=2.0,epsilon=1e-06,keepdim=False,name=None)
paddle.nn.ParameterList(parameters=None)
paddle.nn.PixelShuffle(upscale_factor,data_format='NCHW',name=None)
paddle.nn.PixelUnshuffle(downscale_factor,data_format='NCHW',name=None)
paddle.nn.PReLU(num_parameters=1,init=0.25,weight_attr=None,data_format='NCHW',name=None)
paddle.nn.quant.quant_layers.FakeQuantAbsMax(name=None,quant_bits=8,dtype='float32',quant_on_weight=False,reduce_type=None)
paddle.nn.quant.quant_layers.FakeQuantChannelWiseAbsMax(name=None,channel_num=None,quant_bits=8,quant_axis=0,dtype='float32',quant_on_weight=False,reduce_type=None)
paddle.nn.quant.quant_layers.FakeQuantMAOutputScaleLayer(layer,weight_bits=8,activation_bits=8,moving_rate=0.9,name=None,reduce_type=None,*args,**kwargs)
paddle.nn.quant.quant_layers.FakeQuantMovingAverageAbsMax(name=None,moving_rate=0.9,quant_bits=8,dtype='float32',reduce_type=None)
paddle.nn.quant.quant_layers.MAOutputScaleLayer(layer=None,moving_rate=0.9,name=None,dtype='float32',reduce_type=None)
paddle.nn.quant.quant_layers.MovingAverageAbsMaxScale(name=None,moving_rate=0.9,dtype='float32',reduce_type=None)
paddle.nn.quant.quant_layers.QuantizedColumnParallelLinear(layer,weight_bits=8,activation_bits=8,moving_rate=0.9,weight_quantize_type='abs_max',activation_quantize_type='abs_max',weight_pre_layer=None,act_pre_layer=None,weight_quant_layer=None,act_quant_layer=None)
paddle.nn.quant.quant_layers.QuantizedConv2D(layer,weight_bits=8,activation_bits=8,moving_rate=0.9,weight_quantize_type='abs_max',activation_quantize_type='abs_max',weight_pre_layer=None,act_pre_layer=None,weight_quant_layer=None,act_quant_layer=None)
paddle.nn.quant.quant_layers.QuantizedConv2DTranspose(layer,weight_bits=8,activation_bits=8,moving_rate=0.9,weight_quantize_type='abs_max',activation_quantize_type='abs_max',weight_pre_layer=None,act_pre_layer=None,weight_quant_layer=None,act_quant_layer=None)
paddle.nn.quant.quant_layers.QuantizedLinear(layer,weight_bits=8,activation_bits=8,moving_rate=0.9,weight_quantize_type='abs_max',activation_quantize_type='abs_max',weight_pre_layer=None,act_pre_layer=None,weight_quant_layer=None,act_quant_layer=None)
paddle.nn.quant.quant_layers.QuantizedRowParallelLinear(layer,weight_bits=8,activation_bits=8,moving_rate=0.9,weight_quantize_type='abs_max',activation_quantize_type='abs_max',weight_pre_layer=None,act_pre_layer=None,weight_quant_layer=None,act_quant_layer=None)
paddle.nn.ReLU(name=None)
paddle.nn.ReLU6(name=None)
paddle.nn.RNN(cell,is_reverse=False,time_major=False)
paddle.nn.RNNCellBase(name_scope=None,dtype='float32')
paddle.nn.RReLU(lower=0.125,upper=0.3333333333333333,name=None)
paddle.nn.SELU(scale=1.0507009873554805,alpha=1.6732632423543772,name=None)
paddle.nn.Sequential(*layers)
paddle.nn.Sigmoid(name=None)
paddle.nn.Silu(name=None)
paddle.nn.SimpleRNN(input_size,hidden_size,num_layers=1,direction='forward',time_major=False,dropout=0.0,activation='tanh',weight_ih_attr=None,weight_hh_attr=None,bias_ih_attr=None,bias_hh_attr=None,name=None)
paddle.nn.SimpleRNNCell(input_size,hidden_size,activation='tanh',weight_ih_attr=None,weight_hh_attr=None,bias_ih_attr=None,bias_hh_attr=None,name=None)
paddle.nn.SmoothL1Loss(reduction='mean',delta=1.0,name=None)
paddle.nn.SoftMarginLoss(reduction='mean',name=None)
paddle.nn.Softmax(axis=-1,name=None)
paddle.nn.Softmax2D(name=None)
paddle.nn.Softplus(beta=1,threshold=20,name=None)
paddle.nn.Softshrink(threshold=0.5,name=None)
paddle.nn.Softsign(name=None)
paddle.nn.SpectralNorm(weight_shape,dim=0,power_iters=1,eps=1e-12,dtype='float32')
paddle.nn.Swish(name=None)
paddle.nn.SyncBatchNorm(num_features,momentum=0.9,epsilon=1e-05,weight_attr=None,bias_attr=None,data_format='NCHW',name=None)
paddle.nn.Tanh(name=None)
paddle.nn.Tanhshrink(name=None)
paddle.nn.ThresholdedReLU(threshold=1.0,name=None)
paddle.nn.Transformer(d_model=512,nhead=8,num_encoder_layers=6,num_decoder_layers=6,dim_feedforward=2048,dropout=0.1,activation='relu',attn_dropout=None,act_dropout=None,normalize_before=False,weight_attr=None,bias_attr=None,custom_encoder=None,custom_decoder=None)
paddle.nn.TransformerDecoder(decoder_layer,num_layers,norm=None)
paddle.nn.TransformerDecoderLayer(d_model,nhead,dim_feedforward,dropout=0.1,activation='relu',attn_dropout=None,act_dropout=None,normalize_before=False,weight_attr=None,bias_attr=None)
paddle.nn.TransformerEncoder(encoder_layer,num_layers,norm=None)
paddle.nn.TransformerEncoderLayer(d_model,nhead,dim_feedforward,dropout=0.1,activation='relu',attn_dropout=None,act_dropout=None,normalize_before=False,weight_attr=None,bias_attr=None)
paddle.nn.TripletMarginLoss(margin=1.0,p=2.0,epsilon=1e-06,swap=False,reduction='mean',name=None)
paddle.nn.TripletMarginWithDistanceLoss(distance_function=None,margin=1.0,swap=False,reduction:str='mean',name=None)
paddle.nn.Unfold(kernel_sizes,dilations=1,paddings=0,strides=1,name=None)
paddle.nn.Upsample(size=None,scale_factor=None,mode='nearest',align_corners=False,align_mode=0,data_format='NCHW',name=None)
paddle.nn.UpsamplingBilinear2D(size=None,scale_factor=None,data_format='NCHW',name=None)
paddle.nn.UpsamplingNearest2D(size=None,scale_factor=None,data_format='NCHW',name=None)
paddle.nn.utils.parameters_to_vector(parameters,name=None)
paddle.nn.utils.remove_weight_norm(layer,name='weight')
paddle.nn.utils.spectral_norm(layer,name='weight',n_power_iterations=1,eps=1e-12,dim=None)
paddle.nn.utils.vector_to_parameters(vec,parameters,name=None)
paddle.nn.utils.weight_norm(layer,name='weight',dim=0)
paddle.nn.ZeroPad2D(padding,data_format='NCHW',name=None)
paddle.onnx.export(layer,path,input_spec=None,opset_version=9,**configs)
paddle.optimizer.Adadelta(learning_rate=0.001,epsilon=1e-06,rho=0.95,parameters=None,weight_decay=None,grad_clip=None,name=None)
paddle.optimizer.Adagrad(learning_rate,epsilon=1e-06,parameters=None,weight_decay=None,grad_clip=None,name=None,initial_accumulator_value=0.0)
paddle.optimizer.Adam(learning_rate=0.001,beta1=0.9,beta2=0.999,epsilon=1e-08,parameters=None,weight_decay=None,grad_clip=None,lazy_mode=False,multi_precision=False,use_multi_tensor=False,name=None)
paddle.optimizer.Adamax(learning_rate=0.001,beta1=0.9,beta2=0.999,epsilon=1e-08,parameters=None,weight_decay=None,grad_clip=None,name=None)
paddle.optimizer.AdamW(learning_rate=0.001,beta1=0.9,beta2=0.999,epsilon=1e-08,parameters=None,weight_decay=0.01,lr_ratio=None,apply_decay_param_fun=None,grad_clip=None,lazy_mode=False,multi_precision=False,name=None)
paddle.optimizer.Lamb(learning_rate=0.001,lamb_weight_decay=0.01,beta1=0.9,beta2=0.999,epsilon=1e-06,parameters=None,grad_clip=None,exclude_from_weight_decay_fn=None,multi_precision=False,name=None)
paddle.optimizer.lr.CosineAnnealingDecay(learning_rate,T_max,eta_min=0,last_epoch=-1,verbose=False)
paddle.optimizer.lr.CyclicLR(base_learning_rate,max_learning_rate,step_size_up,step_size_down=None,mode='triangular',exp_gamma=1.0,scale_fn=None,scale_mode='cycle',last_epoch=-1,verbose=False)
paddle.optimizer.lr.ExponentialDecay(learning_rate,gamma,last_epoch=-1,verbose=False)
paddle.optimizer.lr.InverseTimeDecay(learning_rate,gamma,last_epoch=-1,verbose=False)
paddle.optimizer.lr.LambdaDecay(learning_rate,lr_lambda,last_epoch=-1,verbose=False)
paddle.optimizer.lr.LinearWarmup(learning_rate,warmup_steps,start_lr,end_lr,last_epoch=-1,verbose=False)
paddle.optimizer.lr.LRScheduler(learning_rate=0.1,last_epoch=-1,verbose=False)
paddle.optimizer.lr.MultiplicativeDecay(learning_rate,lr_lambda,last_epoch=-1,verbose=False)
paddle.optimizer.lr.MultiStepDecay(learning_rate,milestones,gamma=0.1,last_epoch=-1,verbose=False)
paddle.optimizer.lr.NaturalExpDecay(learning_rate,gamma,last_epoch=-1,verbose=False)
paddle.optimizer.lr.NoamDecay(d_model,warmup_steps,learning_rate=1.0,last_epoch=-1,verbose=False)
paddle.optimizer.lr.OneCycleLR(max_learning_rate,total_steps,divide_factor=25.0,end_learning_rate=0.0001,phase_pct=0.3,anneal_strategy='cos',three_phase=False,last_epoch=-1,verbose=False)
paddle.optimizer.lr.PiecewiseDecay(boundaries,values,last_epoch=-1,verbose=False)
paddle.optimizer.lr.PolynomialDecay(learning_rate,decay_steps,end_lr=0.0001,power=1.0,cycle=False,last_epoch=-1,verbose=False)
paddle.optimizer.lr.ReduceOnPlateau(learning_rate,mode='min',factor=0.1,patience=10,threshold=0.0001,threshold_mode='rel',cooldown=0,min_lr=0,epsilon=1e-08,verbose=False)
paddle.optimizer.lr.StepDecay(learning_rate,step_size,gamma=0.1,last_epoch=-1,verbose=False)
paddle.optimizer.Momentum(learning_rate=0.001,momentum=0.9,parameters=None,use_nesterov=False,weight_decay=None,grad_clip=None,multi_precision=False,rescale_grad=1.0,use_multi_tensor=False,name=None)
paddle.optimizer.Optimizer(learning_rate,parameters=None,weight_decay=None,grad_clip=None,name=None)
paddle.optimizer.RMSProp(learning_rate,rho=0.95,epsilon=1e-06,momentum=0.0,centered=False,parameters=None,weight_decay=None,grad_clip=None,name=None)
paddle.optimizer.SGD(learning_rate=0.001,parameters=None,weight_decay=None,grad_clip=None,multi_precision=False,name=None)
paddle.profiler.export_chrome_tracing(dir_name: str, worker_name: Optional[str] = None)
paddle.profiler.export_protobuf(dir_name: str, worker_name: Optional[str] = None)
paddle.profiler.load_profiler_result(filename:str)
paddle.profiler.make_scheduler(*, closed: int, ready: int, record: int, repeat: int = 0, skip_first: int = 0)
paddle.profiler.Profiler(*,targets:Optional[Iterable[paddle.profiler.profiler.ProfilerTarget]]=None,scheduler:Optional[Union[Callable[[int],paddle.profiler.profiler.ProfilerState],tuple]]=None,on_trace_ready:Optional[Callable[[...],Any]]=None,record_shapes:Optional[bool]=False,profile_memory=False,timer_only:Optional[bool]=False,emit_nvtx:Optional[bool]=False,custom_device_types:Optional[list]=[])
paddle.profiler.ProfilerState(value)
paddle.profiler.ProfilerTarget(value)
paddle.profiler.RecordEvent(name:str,event_type:paddle.fluid.libpaddle.TracerEventType=TracerEventType.PythonUserDefined)
paddle.profiler.SortedKeys(value)
paddle.profiler.SummaryView(value)
paddle.regularizer.L1Decay(coeff=0.0)
paddle.regularizer.L2Decay(coeff=0.0)
paddle.signal.istft(x,n_fft,hop_length=None,win_length=None,window=None,center=True,normalized=False,onesided=True,length=None,return_complex=False,name=None)
paddle.signal.stft(x,n_fft,hop_length=None,win_length=None,window=None,center=True,pad_mode='reflect',normalized=False,onesided=True,name=None)
paddle.sparse.abs(x,name=None)
paddle.sparse.add(x,y,name=None)
paddle.sparse.addmm(input,x,y,beta=1.0,alpha=1.0,name=None)
paddle.sparse.asin(x,name=None)
paddle.sparse.asinh(x,name=None)
paddle.sparse.atan(x,name=None)
paddle.sparse.atanh(x,name=None)
paddle.sparse.cast(x,index_dtype=None,value_dtype=None,name=None)
paddle.sparse.coalesce(x,name=None)
paddle.sparse.deg2rad(x,name=None)
paddle.sparse.divide(x,y,name=None)
paddle.sparse.expm1(x,name=None)
paddle.sparse.is_same_shape(x,y)
paddle.sparse.log1p(x,name=None)
paddle.sparse.masked_matmul(x,y,mask,name=None)
paddle.sparse.matmul(x,y,name=None)
paddle.sparse.multiply(x,y,name=None)
paddle.sparse.mv(x,vec,name=None)
paddle.sparse.neg(x,name=None)
paddle.sparse.nn.BatchNorm(num_features,momentum=0.9,epsilon=1e-05,weight_attr=None,bias_attr=None,data_format='NDHWC',use_global_stats=None,name=None)
paddle.sparse.nn.Conv3D(in_channels,out_channels,kernel_size,stride=1,padding=0,dilation=1,groups=1,padding_mode='zeros',weight_attr=None,bias_attr=None,data_format='NDHWC')
paddle.sparse.nn.functional.attention(query,key,value,sparse_mask,key_padding_mask=None,attn_mask=None,name=None)
paddle.sparse.nn.functional.conv3d(x,weight,bias=None,stride=1,padding=0,dilation=1,groups=1,data_format='NDHWC',name=None)
paddle.sparse.nn.functional.leaky_relu(x,negative_slope=0.01,name=None)
paddle.sparse.nn.functional.max_pool3d(x,kernel_size,stride=None,padding=0,ceil_mode=False,data_format='NDHWC',name=None)
paddle.sparse.nn.functional.relu(x,name=None)
paddle.sparse.nn.functional.relu6(x,name=None)
paddle.sparse.nn.functional.softmax(x,axis=-1,name=None)
paddle.sparse.nn.functional.subm_conv3d(x,weight,bias=None,stride=1,padding=0,dilation=1,groups=1,data_format='NDHWC',key=None,name=None)
paddle.sparse.nn.LeakyReLU(negative_slope=0.01,name=None)
paddle.sparse.nn.MaxPool3D(kernel_size,stride=None,padding=0,return_mask=False,ceil_mode=False,data_format='NDHWC',name=None)
paddle.sparse.nn.ReLU(name=None)
paddle.sparse.nn.ReLU6(name=None)
paddle.sparse.nn.Softmax(axis=-1,name=None)
paddle.sparse.nn.SubmConv3D(in_channels,out_channels,kernel_size,stride=1,padding=0,dilation=1,groups=1,padding_mode='zeros',key=None,weight_attr=None,bias_attr=None,data_format='NDHWC')
paddle.sparse.nn.SyncBatchNorm(num_features,momentum=0.9,epsilon=1e-05,weight_attr=None,bias_attr=None,data_format='NCHW',name=None)
paddle.sparse.pow(x,factor,name=None)
paddle.sparse.rad2deg(x,name=None)
paddle.sparse.reshape(x,shape,name=None)
paddle.sparse.sin(x,name=None)
paddle.sparse.sinh(x,name=None)
paddle.sparse.sparse_coo_tensor(indices,values,shape=None,dtype=None,place=None,stop_gradient=True)
paddle.sparse.sparse_csr_tensor(crows,cols,values,shape,dtype=None,place=None,stop_gradient=True)
paddle.sparse.sqrt(x,name=None)
paddle.sparse.square(x,name=None)
paddle.sparse.subtract(x,y,name=None)
paddle.sparse.tan(x,name=None)
paddle.sparse.tanh(x,name=None)
paddle.sparse.transpose(x,perm,name=None)
paddle.static.accuracy(input,label,k=1,correct=None,total=None)
paddle.static.append_backward(loss,parameter_list=None,no_grad_set=None,callbacks=None,checkpoints=None,distop_context=None)
paddle.static.auc(input,label,curve='ROC',num_thresholds=4095,topk=1,slide_steps=1,ins_tag_weight=None)
paddle.static.BuildStrategy()
paddle.static.CompiledProgram(program_or_graph,build_strategy=None)
paddle.static.cpu_places(device_count=None)
paddle.static.create_global_var(shape,value,dtype,persistable=False,force_cpu=False,name=None)
paddle.static.ctr_metric_bundle(input,label,ins_tag_weight=None)
paddle.static.cuda_places(device_ids=None)
paddle.static.data(name,shape,dtype=None,lod_level=0)
paddle.static.default_main_program()
paddle.static.default_startup_program()
paddle.static.deserialize_persistables(program,data,executor)
paddle.static.deserialize_program(data)
paddle.static.device_guard(device=None)
paddle.static.ExecutionStrategy()
paddle.static.Executor(place=None)
paddle.static.exponential_decay(learning_rate,decay_steps,decay_rate,staircase=False)
paddle.static.ExponentialMovingAverage(decay=0.999,thres_steps=None,name=None)
paddle.static.global_scope()
paddle.static.gradients(targets,inputs,target_gradients=None,no_grad_set=None)
paddle.static.InputSpec(shape,dtype='float32',name=None)
paddle.static.ipu_shard_guard(index=-1,stage=-1)
paddle.static.IpuCompiledProgram(program=None,scope=None,ipu_strategy=None)
paddle.static.IpuStrategy
paddle.static.load(program,model_path,executor=None,var_list=None)
paddle.static.load_from_file(path)
paddle.static.load_inference_model(path_prefix,executor,**kwargs)
paddle.static.load_program_state(model_path,var_list=None)
paddle.static.mlu_places(device_ids=None)
paddle.static.name_scope(prefix=None)
paddle.static.nn.batch_norm(input,act=None,is_test=False,momentum=0.9,epsilon=1e-05,param_attr=None,bias_attr=None,data_layout='NCHW',in_place=False,name=None,moving_mean_name=None,moving_variance_name=None,do_model_average_for_mean_and_var=True,use_global_stats=False)
paddle.static.nn.bilinear_tensor_product(x,y,size,act=None,name=None,param_attr=None,bias_attr=None)
paddle.static.nn.case(pred_fn_pairs,default=None,name=None)
paddle.static.nn.cond(pred,true_fn=None,false_fn=None,name=None,return_names=None)
paddle.static.nn.conv2d(input,num_filters,filter_size,stride=1,padding=0,dilation=1,groups=None,param_attr=None,bias_attr=None,use_cudnn=True,act=None,name=None,data_format='NCHW')
paddle.static.nn.conv2d_transpose(input,num_filters,output_size=None,filter_size=None,padding=0,stride=1,dilation=1,groups=None,param_attr=None,bias_attr=None,use_cudnn=True,act=None,name=None,data_format='NCHW')
paddle.static.nn.conv3d(input,num_filters,filter_size,stride=1,padding=0,dilation=1,groups=None,param_attr=None,bias_attr=None,use_cudnn=True,act=None,name=None,data_format='NCDHW')
paddle.static.nn.conv3d_transpose(input,num_filters,output_size=None,filter_size=None,padding=0,stride=1,dilation=1,groups=None,param_attr=None,bias_attr=None,use_cudnn=True,act=None,name=None,data_format='NCDHW')
paddle.static.nn.crf_decoding(input,param_attr,label=None,length=None)
paddle.static.nn.data_norm(input,act=None,epsilon=1e-05,param_attr=None,data_layout='NCHW',in_place=False,name=None,moving_mean_name=None,moving_variance_name=None,do_model_average_for_mean_and_var=True,slot_dim=-1,sync_stats=False,summary_decay_rate=0.9999999,enable_scale_and_shift=False)
paddle.static.nn.deform_conv2d(x,offset,mask,num_filters,filter_size,stride=1,padding=0,dilation=1,groups=1,deformable_groups=1,im2col_step=1,weight_attr=None,bias_attr=None,name=None)
paddle.static.nn.embedding(input,size,is_sparse=False,is_distributed=False,padding_idx=None,param_attr=None,dtype='float32')
paddle.static.nn.fc(x,size,num_flatten_dims=1,weight_attr=None,bias_attr=None,activation=None,name=None)
paddle.static.nn.group_norm(input,groups,epsilon=1e-05,param_attr=None,bias_attr=None,act=None,data_layout='NCHW',name=None)
paddle.static.nn.instance_norm(input,epsilon=1e-05,param_attr=None,bias_attr=None,name=None)
paddle.static.nn.layer_norm(input,scale=True,shift=True,begin_norm_axis=1,epsilon=1e-05,param_attr=None,bias_attr=None,act=None,name=None)
paddle.static.nn.multi_box_head(inputs,image,base_size,num_classes,aspect_ratios,min_ratio=None,max_ratio=None,min_sizes=None,max_sizes=None,steps=None,step_w=None,step_h=None,offset=0.5,variance=[0.1,0.1,0.2,0.2],flip=True,clip=False,kernel_size=1,pad=0,stride=1,name=None,min_max_aspect_ratios_order=False)
paddle.static.nn.nce(input,label,num_total_classes,sample_weight=None,param_attr=None,bias_attr=None,num_neg_samples=None,name=None,sampler='uniform',custom_dist=None,seed=0,is_sparse=False)
paddle.static.nn.prelu(x,mode,param_attr=None,data_format='NCHW',name=None)
paddle.static.nn.row_conv(input,future_context_size,param_attr=None,act=None)
paddle.static.nn.sequence_concat(input,name=None)
paddle.static.nn.sequence_conv(input,num_filters,filter_size=3,filter_stride=1,padding=True,padding_start=None,bias_attr=None,param_attr=None,act=None,name=None)
paddle.static.nn.sequence_enumerate(input,win_size,pad_value=0,name=None)
paddle.static.nn.sequence_expand(x,y,ref_level=-1,name=None)
paddle.static.nn.sequence_expand_as(x,y,name=None)
paddle.static.nn.sequence_first_step(input)
paddle.static.nn.sequence_last_step(input)
paddle.static.nn.sequence_pad(x,pad_value,maxlen=None,name=None)
paddle.static.nn.sequence_pool(input,pool_type,is_test=False,pad_value=0.0)
paddle.static.nn.sequence_reshape(input,new_dim)
paddle.static.nn.sequence_reverse(x,name=None)
paddle.static.nn.sequence_scatter(input,index,updates,name=None)
paddle.static.nn.sequence_slice(input,offset,length,name=None)
paddle.static.nn.sequence_softmax(input,use_cudnn=False,name=None)
paddle.static.nn.sequence_unpad(x,length,name=None)
paddle.static.nn.sparse_embedding(input,size,padding_idx=None,is_test=False,entry=None,table_class='MemorySparseTable',param_attr=None,dtype='float32',slot=None)
paddle.static.nn.spectral_norm(weight,dim=0,power_iters=1,eps=1e-12,name=None)
paddle.static.nn.StaticRNN(name=None)
paddle.static.nn.switch_case(branch_index,branch_fns,default=None,name=None)
paddle.static.nn.while_loop(cond,body,loop_vars,is_test=False,name=None)
paddle.static.normalize_program(program,feed_vars,fetch_vars)
paddle.static.npu_places(device_ids=None)
paddle.static.ParallelExecutor(use_cuda,loss_name=None,main_program=None,share_vars_from=None,exec_strategy=None,build_strategy=None,num_trainers=1,trainer_id=0,scope=None)
paddle.static.Print(input,first_n=-1,message=None,summarize=20,print_tensor_name=True,print_tensor_type=True,print_tensor_shape=True,print_tensor_layout=True,print_tensor_lod=True,print_phase='both')
paddle.static.Program()
paddle.static.program_guard(main_program,startup_program=None)
paddle.static.py_func(func,x,out,backward_func=None,skip_vars_in_backward_input=None)
paddle.static.save(program,model_path,protocol=4,**configs)
paddle.static.save_inference_model(path_prefix,feed_vars,fetch_vars,executor,**kwargs)
paddle.static.save_to_file(path,content)
paddle.static.scope_guard(scope)
paddle.static.serialize_persistables(feed_vars,fetch_vars,executor,**kwargs)
paddle.static.serialize_program(feed_vars,fetch_vars,**kwargs)
paddle.static.set_ipu_shard(call_func,index=-1,stage=-1)
paddle.static.set_program_state(program,state_dict)
paddle.static.sparsity.add_supported_layer(layer,pruning_func=None)
paddle.static.sparsity.set_excluded_layers(main_program,param_names)
paddle.static.Variable(block,type=VarType.LOD_TENSOR,name=None,shape=None,dtype=None,lod_level=None,capacity=None,persistable=None,error_clip=None,stop_gradient=False,is_data=False,need_check_feed=False,belong_to_optimizer=False,**kwargs)
paddle.static.WeightNormParamAttr(dim=None,name=None,initializer=None,learning_rate=1.0,regularizer=None,trainable=True,do_model_average=False,need_clip=True)
paddle.static.xpu_places(device_ids=None)
paddle.sysconfig.get_include()
paddle.sysconfig.get_lib()
Overview
paddle.Tensor.add_(x, y, name=None)
paddle.Tensor.astype(self, dtype)
paddle.Tensor.backward(self, grad_tensor=None, retain_graph=False)
paddle.Tensor.ceil_(x, name=None)
paddle.Tensor.clear_grad(self)
paddle.Tensor.clip_(x, min=None, max=None, name=None)
paddle.Tensor.clone(self)
paddle.Tensor.cpu(self)
paddle.Tensor.cuda(self, device_id=None, blocking=True)
paddle.Tensor.dim(x)
paddle.Tensor.erfinv_(x, name=None)
paddle.Tensor.exp_(x, name=None)
paddle.Tensor.exponential_(x, lam=1.0, name=None)
paddle.Tensor.fill_(x, value)
paddle.Tensor.fill_diagonal_(x, value, offset=0, wrap=False, name=None)
paddle.Tensor.fill_diagonal_tensor(x, y, offset=0, dim1=0, dim2=1, name=None)
paddle.Tensor.fill_diagonal_tensor_(x, y, offset=0, dim1=0, dim2=1, name=None)
paddle.Tensor.flatten_(x, start_axis=0, stop_axis=- 1, name=None)
paddle.Tensor.floor_(x, name=None)
paddle.Tensor.gradient(self)
paddle.Tensor.item(self, *args)
paddle.Tensor.lerp_(x, y, weight, name=None)
paddle.Tensor.ndimension(x)
paddle.Tensor.pin_memory(self)
paddle.Tensor.put_along_axis_(arr, indices, values, axis, reduce='assign')
paddle.Tensor.reciprocal_(x, name=None)
paddle.Tensor.register_hook(self, hook)
paddle.Tensor.remainder_(x, y, name=None)
paddle.Tensor.round_(x, name=None)
paddle.Tensor.rsqrt_(x, name=None)
paddle.Tensor.scale_(x, scale=1.0, bias=0.0, bias_after_scale=True, act=None, name=None)
paddle.Tensor.set_value(self, value)
paddle.Tensor.sqrt_(x, name=None)
paddle.Tensor.subtract_(x, y, name=None)
paddle.Tensor.to_dense(self)
paddle.Tensor.to_sparse_coo(self, sparse_dim)
paddle.Tensor.uniform_(x, min=- 1.0, max=1.0, seed=0, name=None)
paddle.Tensor.value(self)
paddle.Tensor.values(self)
paddle.Tensor.zero_(x)
paddle.text.Conll05st(data_file=None,word_dict_file=None,verb_dict_file=None,target_dict_file=None,emb_file=None,download=True)
paddle.text.Imdb(data_file=None,mode='train',cutoff=150,download=True)
paddle.text.Imikolov(data_file=None,data_type='NGRAM',window_size=-1,mode='train',min_word_freq=50,download=True)
paddle.text.Movielens(data_file=None,mode='train',test_ratio=0.1,rand_seed=0,download=True)
paddle.text.UCIHousing(data_file=None,mode='train',download=True)
paddle.text.viterbi_decode(potentials,transition_params,lengths,include_bos_eos_tag=True,name=None)
paddle.text.ViterbiDecoder(transitions,include_bos_eos_tag=True,name=None)
paddle.text.WMT14(data_file=None,mode='train',dict_size=-1,download=True)
paddle.text.WMT16(data_file=None,mode='train',src_dict_size=-1,trg_dict_size=-1,lang='en',download=True)
paddle.utils.cpp_extension.CppExtension(sources,*args,**kwargs)
paddle.utils.cpp_extension.CUDAExtension(sources,*args,**kwargs)
paddle.utils.cpp_extension.get_build_directory(verbose=False)
paddle.utils.cpp_extension.load(name,sources,extra_cxx_cflags=None,extra_cuda_cflags=None,extra_ldflags=None,extra_include_paths=None,build_directory=None,verbose=False)
paddle.utils.cpp_extension.setup(**attr)
paddle.utils.deprecated(update_to='',since='',reason='',level=0)
paddle.utils.dlpack.from_dlpack(dlpack)
paddle.utils.dlpack.to_dlpack(x)
paddle.utils.download.get_weights_path_from_url(url,md5sum=None)
paddle.utils.profiler.cuda_profiler(output_file,output_mode=None,config=None)
paddle.utils.profiler.get_profiler()
paddle.utils.profiler.Profiler(enabled=True,options=None)
paddle.utils.profiler.profiler(state,sorted_key=None,profile_path='/tmp/profile',tracer_option='Default')
paddle.utils.profiler.ProfilerOptions(options=None)
paddle.utils.profiler.reset_profiler()
paddle.utils.profiler.start_profiler(state,tracer_option='Default')
paddle.utils.profiler.stop_profiler(sorted_key=None,profile_path='/tmp/profile')
paddle.utils.require_version(min_version,max_version=None)
paddle.utils.run_check()
paddle.utils.try_import(module_name)
paddle.utils.unique_name.generate(key)
paddle.utils.unique_name.guard(new_generator=None)
paddle.utils.unique_name.switch(new_generator=None,new_para_name_checker=None)
paddle.version.cuda()
paddle.version.cudnn()
paddle.version.show()
paddle.vision.datasets.Cifar10(data_file=None,mode='train',transform=None,download=True,backend=None)
paddle.vision.datasets.Cifar100(data_file=None,mode='train',transform=None,download=True,backend=None)
paddle.vision.datasets.DatasetFolder(root,loader=None,extensions=None,transform=None,is_valid_file=None)
paddle.vision.datasets.FashionMNIST(image_path=None,label_path=None,mode='train',transform=None,download=True,backend=None)
paddle.vision.datasets.Flowers(data_file=None,label_file=None,setid_file=None,mode='train',transform=None,download=True,backend=None)
paddle.vision.datasets.ImageFolder(root,loader=None,extensions=None,transform=None,is_valid_file=None)
paddle.vision.datasets.MNIST(image_path=None,label_path=None,mode='train',transform=None,download=True,backend=None)
paddle.vision.datasets.VOC2012(data_file=None,mode='train',transform=None,download=True,backend=None)
paddle.vision.get_image_backend()
paddle.vision.image_load(path,backend=None)
paddle.vision.models.AlexNet(num_classes=1000)
paddle.vision.models.alexnet(pretrained=False,**kwargs)
paddle.vision.models.DenseNet(layers=121,bn_size=4,dropout=0.0,num_classes=1000,with_pool=True)
paddle.vision.models.densenet121(pretrained=False,**kwargs)
paddle.vision.models.densenet161(pretrained=False,**kwargs)
paddle.vision.models.densenet169(pretrained=False,**kwargs)
paddle.vision.models.densenet201(pretrained=False,**kwargs)
paddle.vision.models.densenet264(pretrained=False,**kwargs)
paddle.vision.models.GoogLeNet(num_classes=1000,with_pool=True)
paddle.vision.models.googlenet(pretrained=False,**kwargs)
paddle.vision.models.inception_v3(pretrained=False,**kwargs)
paddle.vision.models.InceptionV3(num_classes=1000,with_pool=True)
paddle.vision.models.LeNet(num_classes=10)
paddle.vision.models.mobilenet_v1(pretrained=False,scale=1.0,**kwargs)
paddle.vision.models.mobilenet_v2(pretrained=False,scale=1.0,**kwargs)
paddle.vision.models.mobilenet_v3_large(pretrained=False,scale=1.0,**kwargs)
paddle.vision.models.mobilenet_v3_small(pretrained=False,scale=1.0,**kwargs)
paddle.vision.models.MobileNetV1(scale=1.0,num_classes=1000,with_pool=True)
paddle.vision.models.MobileNetV2(scale=1.0,num_classes=1000,with_pool=True)
paddle.vision.models.MobileNetV3Large(scale=1.0,num_classes=1000,with_pool=True)
paddle.vision.models.MobileNetV3Small(scale=1.0,num_classes=1000,with_pool=True)
paddle.vision.models.ResNet(block,depth=50,width=64,num_classes=1000,with_pool=True,groups=1)
paddle.vision.models.resnet101(pretrained=False,**kwargs)
paddle.vision.models.resnet152(pretrained=False,**kwargs)
paddle.vision.models.resnet18(pretrained=False,**kwargs)
paddle.vision.models.resnet34(pretrained=False,**kwargs)
paddle.vision.models.resnet50(pretrained=False,**kwargs)
paddle.vision.models.resnext101_32x4d(pretrained=False,**kwargs)
paddle.vision.models.resnext101_64x4d(pretrained=False,**kwargs)
paddle.vision.models.resnext152_32x4d(pretrained=False,**kwargs)
paddle.vision.models.resnext152_64x4d(pretrained=False,**kwargs)
paddle.vision.models.resnext50_32x4d(pretrained=False,**kwargs)
paddle.vision.models.resnext50_64x4d(pretrained=False,**kwargs)
paddle.vision.models.shufflenet_v2_swish(pretrained=False,**kwargs)
paddle.vision.models.shufflenet_v2_x0_25(pretrained=False,**kwargs)
paddle.vision.models.shufflenet_v2_x0_33(pretrained=False,**kwargs)
paddle.vision.models.shufflenet_v2_x0_5(pretrained=False,**kwargs)
paddle.vision.models.shufflenet_v2_x1_0(pretrained=False,**kwargs)
paddle.vision.models.shufflenet_v2_x1_5(pretrained=False,**kwargs)
paddle.vision.models.shufflenet_v2_x2_0(pretrained=False,**kwargs)
paddle.vision.models.ShuffleNetV2(scale=1.0,act='relu',num_classes=1000,with_pool=True)
paddle.vision.models.SqueezeNet(version,num_classes=1000,with_pool=True)
paddle.vision.models.squeezenet1_0(pretrained=False,**kwargs)
paddle.vision.models.squeezenet1_1(pretrained=False,**kwargs)
paddle.vision.models.VGG(features,num_classes=1000,with_pool=True)
paddle.vision.models.vgg11(pretrained=False,batch_norm=False,**kwargs)
paddle.vision.models.vgg13(pretrained=False,batch_norm=False,**kwargs)
paddle.vision.models.vgg16(pretrained=False,batch_norm=False,**kwargs)
paddle.vision.models.vgg19(pretrained=False,batch_norm=False,**kwargs)
paddle.vision.models.wide_resnet101_2(pretrained=False,**kwargs)
paddle.vision.models.wide_resnet50_2(pretrained=False,**kwargs)
paddle.vision.ops.box_coder(prior_box,prior_box_var,target_box,code_type='encode_center_size',box_normalized=True,axis=0,name=None)
paddle.vision.ops.decode_jpeg(x,mode='unchanged',name=None)
paddle.vision.ops.deform_conv2d(x,offset,weight,bias=None,stride=1,padding=0,dilation=1,deformable_groups=1,groups=1,mask=None,name=None)
paddle.vision.ops.DeformConv2D(in_channels,out_channels,kernel_size,stride=1,padding=0,dilation=1,deformable_groups=1,groups=1,weight_attr=None,bias_attr=None)
paddle.vision.ops.distribute_fpn_proposals(fpn_rois,min_level,max_level,refer_level,refer_scale,pixel_offset=False,rois_num=None,name=None)
paddle.vision.ops.generate_proposals(scores,bbox_deltas,img_size,anchors,variances,pre_nms_top_n=6000,post_nms_top_n=1000,nms_thresh=0.5,min_size=0.1,eta=1.0,pixel_offset=False,return_rois_num=False,name=None)
paddle.vision.ops.matrix_nms(bboxes,scores,score_threshold,post_threshold,nms_top_k,keep_top_k,use_gaussian=False,gaussian_sigma=2.0,background_label=0,normalized=True,return_index=False,return_rois_num=True,name=None)
paddle.vision.ops.nms(boxes,iou_threshold=0.3,scores=None,category_idxs=None,categories=None,top_k=None)
paddle.vision.ops.prior_box(input,image,min_sizes,max_sizes=None,aspect_ratios=[1.0],variance=[0.1,0.1,0.2,0.2],flip=False,clip=False,steps=[0.0,0.0],offset=0.5,min_max_aspect_ratios_order=False,name=None)
paddle.vision.ops.psroi_pool(x,boxes,boxes_num,output_size,spatial_scale=1.0,name=None)
paddle.vision.ops.PSRoIPool(output_size,spatial_scale=1.0)
paddle.vision.ops.read_file(filename,name=None)
paddle.vision.ops.roi_align(x,boxes,boxes_num,output_size,spatial_scale=1.0,sampling_ratio=-1,aligned=True,name=None)
paddle.vision.ops.roi_pool(x,boxes,boxes_num,output_size,spatial_scale=1.0,name=None)
paddle.vision.ops.RoIAlign(output_size,spatial_scale=1.0)
paddle.vision.ops.RoIPool(output_size,spatial_scale=1.0)
paddle.vision.ops.yolo_box(x,img_size,anchors,class_num,conf_thresh,downsample_ratio,clip_bbox=True,name=None,scale_x_y=1.0,iou_aware=False,iou_aware_factor=0.5)
paddle.vision.ops.yolo_loss(x,gt_box,gt_label,anchors,anchor_mask,class_num,ignore_thresh,downsample_ratio,gt_score=None,use_label_smooth=True,name=None,scale_x_y=1.0)
paddle.vision.set_image_backend(backend)
paddle.vision.transforms.adjust_brightness(img,brightness_factor)
paddle.vision.transforms.adjust_contrast(img,contrast_factor)
paddle.vision.transforms.adjust_hue(img,hue_factor)
paddle.vision.transforms.affine(img,angle,translate,scale,shear,interpolation='nearest',fill=0,center=None)
paddle.vision.transforms.BaseTransform(keys=None)
paddle.vision.transforms.BrightnessTransform(value,keys=None)
paddle.vision.transforms.center_crop(img,output_size)
paddle.vision.transforms.CenterCrop(size,keys=None)
paddle.vision.transforms.ColorJitter(brightness=0,contrast=0,saturation=0,hue=0,keys=None)
paddle.vision.transforms.Compose(transforms)
paddle.vision.transforms.ContrastTransform(value,keys=None)
paddle.vision.transforms.crop(img,top,left,height,width)
paddle.vision.transforms.erase(img,i,j,h,w,v,inplace=False)
paddle.vision.transforms.Grayscale(num_output_channels=1,keys=None)
paddle.vision.transforms.hflip(img)
paddle.vision.transforms.HueTransform(value,keys=None)
paddle.vision.transforms.Normalize(mean=0.0,std=1.0,data_format='CHW',to_rgb=False,keys=None)
paddle.vision.transforms.normalize(img,mean,std,data_format='CHW',to_rgb=False)
paddle.vision.transforms.Pad(padding,fill=0,padding_mode='constant',keys=None)
paddle.vision.transforms.pad(img,padding,fill=0,padding_mode='constant')
paddle.vision.transforms.perspective(img,startpoints,endpoints,interpolation='nearest',fill=0)
paddle.vision.transforms.RandomAffine(degrees,translate=None,scale=None,shear=None,interpolation='nearest',fill=0,center=None,keys=None)
paddle.vision.transforms.RandomCrop(size,padding=None,pad_if_needed=False,fill=0,padding_mode='constant',keys=None)
paddle.vision.transforms.RandomErasing(prob=0.5,scale=(0.02,0.33),ratio=(0.3,3.3),value=0,inplace=False,keys=None)
paddle.vision.transforms.RandomHorizontalFlip(prob=0.5,keys=None)
paddle.vision.transforms.RandomPerspective(prob=0.5,distortion_scale=0.5,interpolation='nearest',fill=0,keys=None)
paddle.vision.transforms.RandomResizedCrop(size,scale=(0.08,1.0),ratio=(0.75,1.3333333333333333),interpolation='bilinear',keys=None)
paddle.vision.transforms.RandomRotation(degrees,interpolation='nearest',expand=False,center=None,fill=0,keys=None)
paddle.vision.transforms.RandomVerticalFlip(prob=0.5,keys=None)
paddle.vision.transforms.Resize(size,interpolation='bilinear',keys=None)
paddle.vision.transforms.resize(img,size,interpolation='bilinear')
paddle.vision.transforms.rotate(img,angle,interpolation='nearest',expand=False,center=None,fill=0)
paddle.vision.transforms.SaturationTransform(value,keys=None)
paddle.vision.transforms.to_grayscale(img,num_output_channels=1)
paddle.vision.transforms.to_tensor(pic,data_format='CHW')
paddle.vision.transforms.ToTensor(data_format='CHW',keys=None)
paddle.vision.transforms.Transpose(order=(2,0,1),keys=None)
paddle.vision.transforms.vflip(img)paddle.Tensor.add_(x,y,napaddle.Tensor.add_(x,y,na
